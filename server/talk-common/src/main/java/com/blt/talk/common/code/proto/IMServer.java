// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Server.proto

package com.blt.talk.common.code.proto;

public final class IMServer {
  private IMServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface IMStopReceivePacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMStopReceivePacket)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    boolean hasResult();
    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    int getResult();
  }
  /**
   * <pre>
   *db_proxy
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMStopReceivePacket}
   */
  public  static final class IMStopReceivePacket extends
      com.google.protobuf.GeneratedMessageLite<
          IMStopReceivePacket, IMStopReceivePacket.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMStopReceivePacket)
      IMStopReceivePacketOrBuilder {
    private IMStopReceivePacket() {
    }
    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    public int getResult() {
      return result_;
    }
    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    private void setResult(int value) {
      bitField0_ |= 0x00000001;
      result_ = value;
    }
    /**
     * <pre>
     *cmd id:   0x0702
     * </pre>
     *
     * <code>required uint32 result = 1;</code>
     */
    private void clearResult() {
      bitField0_ = (bitField0_ & ~0x00000001);
      result_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *db_proxy
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMStopReceivePacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMStopReceivePacket)
        com.blt.talk.common.code.proto.IMServer.IMStopReceivePacketOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:   0x0702
       * </pre>
       *
       * <code>required uint32 result = 1;</code>
       */
      public boolean hasResult() {
        return instance.hasResult();
      }
      /**
       * <pre>
       *cmd id:   0x0702
       * </pre>
       *
       * <code>required uint32 result = 1;</code>
       */
      public int getResult() {
        return instance.getResult();
      }
      /**
       * <pre>
       *cmd id:   0x0702
       * </pre>
       *
       * <code>required uint32 result = 1;</code>
       */
      public Builder setResult(int value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:   0x0702
       * </pre>
       *
       * <code>required uint32 result = 1;</code>
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMStopReceivePacket)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket other = (com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket) arg1;
          result_ = visitor.visitInt(
              hasResult(), result_,
              other.hasResult(), other.result_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  result_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMStopReceivePacket)
    private static final com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMStopReceivePacket();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMStopReceivePacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMStopReceivePacket> PARSER;

    public static com.google.protobuf.Parser<IMStopReceivePacket> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMValidateReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMValidateReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    boolean hasUserName();
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    java.lang.String getUserName();
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * <pre>
   *db_proxy
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMValidateReq}
   */
  public  static final class IMValidateReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMValidateReq, IMValidateReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMValidateReq)
      IMValidateReqOrBuilder {
    private IMValidateReq() {
      userName_ = "";
      password_ = "";
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int USER_NAME_FIELD_NUMBER = 1;
    private java.lang.String userName_;
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public java.lang.String getUserName() {
      return userName_;
    }
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userName_);
    }
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void setUserName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userName_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void clearUserName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userName_ = getDefaultInstance().getUserName();
    }
    /**
     * <pre>
     *cmd id:	0x0703
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void setUserNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userName_ = value.toStringUtf8();
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.String password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public java.lang.String getPassword() {
      return password_;
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000004);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getUserName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMValidateReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *db_proxy
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMValidateReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMValidateReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMValidateReq)
        com.blt.talk.common.code.proto.IMServer.IMValidateReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMValidateReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public boolean hasUserName() {
        return instance.hasUserName();
      }
      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public java.lang.String getUserName() {
        return instance.getUserName();
      }
      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        return instance.getUserNameBytes();
      }
      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserName(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder clearUserName() {
        copyOnWrite();
        instance.clearUserName();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0703
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserNameBytes(value);
        return this;
      }

      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public java.lang.String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMValidateReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMValidateReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPassword()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMValidateReq other = (com.blt.talk.common.code.proto.IMServer.IMValidateReq) arg1;
          userName_ = visitor.visitString(
              hasUserName(), userName_,
              other.hasUserName(), other.userName_);
          password_ = visitor.visitString(
              hasPassword(), password_,
              other.hasPassword(), other.password_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  userName_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000002;
                  password_ = s;
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000004;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMValidateReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMValidateReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMValidateReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMValidateReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMValidateReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMValidateReq> PARSER;

    public static com.google.protobuf.Parser<IMValidateReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMValidateRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMValidateRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    boolean hasUserName();
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    java.lang.String getUserName();
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <code>required uint32 result_code = 2;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required uint32 result_code = 2;</code>
     */
    int getResultCode();

    /**
     * <code>optional string result_string = 3;</code>
     */
    boolean hasResultString();
    /**
     * <code>optional string result_string = 3;</code>
     */
    java.lang.String getResultString();
    /**
     * <code>optional string result_string = 3;</code>
     */
    com.google.protobuf.ByteString
        getResultStringBytes();

    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    boolean hasUserInfo();
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.UserInfo getUserInfo();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * <pre>
   *db_proxy
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMValidateRsp}
   */
  public  static final class IMValidateRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMValidateRsp, IMValidateRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMValidateRsp)
      IMValidateRspOrBuilder {
    private IMValidateRsp() {
      userName_ = "";
      resultString_ = "";
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int USER_NAME_FIELD_NUMBER = 1;
    private java.lang.String userName_;
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public java.lang.String getUserName() {
      return userName_;
    }
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userName_);
    }
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void setUserName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userName_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void clearUserName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userName_ = getDefaultInstance().getUserName();
    }
    /**
     * <pre>
     *cmd id:	0x0704
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    private void setUserNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userName_ = value.toStringUtf8();
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 2;
    private int resultCode_;
    /**
     * <code>required uint32 result_code = 2;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 result_code = 2;</code>
     */
    public int getResultCode() {
      return resultCode_;
    }
    /**
     * <code>required uint32 result_code = 2;</code>
     */
    private void setResultCode(int value) {
      bitField0_ |= 0x00000002;
      resultCode_ = value;
    }
    /**
     * <code>required uint32 result_code = 2;</code>
     */
    private void clearResultCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      resultCode_ = 0;
    }

    public static final int RESULT_STRING_FIELD_NUMBER = 3;
    private java.lang.String resultString_;
    /**
     * <code>optional string result_string = 3;</code>
     */
    public boolean hasResultString() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string result_string = 3;</code>
     */
    public java.lang.String getResultString() {
      return resultString_;
    }
    /**
     * <code>optional string result_string = 3;</code>
     */
    public com.google.protobuf.ByteString
        getResultStringBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(resultString_);
    }
    /**
     * <code>optional string result_string = 3;</code>
     */
    private void setResultString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      resultString_ = value;
    }
    /**
     * <code>optional string result_string = 3;</code>
     */
    private void clearResultString() {
      bitField0_ = (bitField0_ & ~0x00000004);
      resultString_ = getDefaultInstance().getResultString();
    }
    /**
     * <code>optional string result_string = 3;</code>
     */
    private void setResultStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      resultString_ = value.toStringUtf8();
    }

    public static final int USER_INFO_FIELD_NUMBER = 4;
    private com.blt.talk.common.code.proto.IMBaseDefine.UserInfo userInfo_;
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    public boolean hasUserInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.UserInfo getUserInfo() {
      return userInfo_ == null ? com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.getDefaultInstance() : userInfo_;
    }
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    private void setUserInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      userInfo_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    private void setUserInfo(
        com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.Builder builderForValue) {
      userInfo_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    private void mergeUserInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserInfo value) {
      if (userInfo_ != null &&
          userInfo_ != com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.getDefaultInstance()) {
        userInfo_ =
          com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.newBuilder(userInfo_).mergeFrom(value).buildPartial();
      } else {
        userInfo_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
     */
    private void clearUserInfo() {  userInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000010);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getUserName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, resultCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getResultString());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getUserInfo());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, resultCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getResultString());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUserInfo());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMValidateRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *db_proxy
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMValidateRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMValidateRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMValidateRsp)
        com.blt.talk.common.code.proto.IMServer.IMValidateRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMValidateRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public boolean hasUserName() {
        return instance.hasUserName();
      }
      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public java.lang.String getUserName() {
        return instance.getUserName();
      }
      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        return instance.getUserNameBytes();
      }
      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserName(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder clearUserName() {
        copyOnWrite();
        instance.clearUserName();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0704
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserNameBytes(value);
        return this;
      }

      /**
       * <code>required uint32 result_code = 2;</code>
       */
      public boolean hasResultCode() {
        return instance.hasResultCode();
      }
      /**
       * <code>required uint32 result_code = 2;</code>
       */
      public int getResultCode() {
        return instance.getResultCode();
      }
      /**
       * <code>required uint32 result_code = 2;</code>
       */
      public Builder setResultCode(int value) {
        copyOnWrite();
        instance.setResultCode(value);
        return this;
      }
      /**
       * <code>required uint32 result_code = 2;</code>
       */
      public Builder clearResultCode() {
        copyOnWrite();
        instance.clearResultCode();
        return this;
      }

      /**
       * <code>optional string result_string = 3;</code>
       */
      public boolean hasResultString() {
        return instance.hasResultString();
      }
      /**
       * <code>optional string result_string = 3;</code>
       */
      public java.lang.String getResultString() {
        return instance.getResultString();
      }
      /**
       * <code>optional string result_string = 3;</code>
       */
      public com.google.protobuf.ByteString
          getResultStringBytes() {
        return instance.getResultStringBytes();
      }
      /**
       * <code>optional string result_string = 3;</code>
       */
      public Builder setResultString(
          java.lang.String value) {
        copyOnWrite();
        instance.setResultString(value);
        return this;
      }
      /**
       * <code>optional string result_string = 3;</code>
       */
      public Builder clearResultString() {
        copyOnWrite();
        instance.clearResultString();
        return this;
      }
      /**
       * <code>optional string result_string = 3;</code>
       */
      public Builder setResultStringBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResultStringBytes(value);
        return this;
      }

      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public boolean hasUserInfo() {
        return instance.hasUserInfo();
      }
      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.UserInfo getUserInfo() {
        return instance.getUserInfo();
      }
      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public Builder setUserInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserInfo value) {
        copyOnWrite();
        instance.setUserInfo(value);
        return this;
        }
      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public Builder setUserInfo(
          com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setUserInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public Builder mergeUserInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserInfo value) {
        copyOnWrite();
        instance.mergeUserInfo(value);
        return this;
      }
      /**
       * <code>optional .IM.BaseDefine.UserInfo user_info = 4;</code>
       */
      public Builder clearUserInfo() {  copyOnWrite();
        instance.clearUserInfo();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMValidateRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMValidateRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasResultCode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasUserInfo()) {
            if (!getUserInfo().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMValidateRsp other = (com.blt.talk.common.code.proto.IMServer.IMValidateRsp) arg1;
          userName_ = visitor.visitString(
              hasUserName(), userName_,
              other.hasUserName(), other.userName_);
          resultCode_ = visitor.visitInt(
              hasResultCode(), resultCode_,
              other.hasResultCode(), other.resultCode_);
          resultString_ = visitor.visitString(
              hasResultString(), resultString_,
              other.hasResultString(), other.resultString_);
          userInfo_ = visitor.visitMessage(userInfo_, other.userInfo_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  userName_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  resultCode_ = input.readUInt32();
                  break;
                }
                case 26: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  resultString_ = s;
                  break;
                }
                case 34: {
                  com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = userInfo_.toBuilder();
                  }
                  userInfo_ = input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.UserInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(userInfo_);
                    userInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000010;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMValidateRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMValidateRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMValidateRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMValidateRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMValidateRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMValidateRsp> PARSER;

    public static com.google.protobuf.Parser<IMValidateRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMGetDeviceTokenReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMGetDeviceTokenReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    java.util.List<java.lang.Long> getUserIdList();
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    int getUserIdCount();
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    long getUserId(int index);

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * <pre>
   *db_proxy
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMGetDeviceTokenReq}
   */
  public  static final class IMGetDeviceTokenReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMGetDeviceTokenReq, IMGetDeviceTokenReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMGetDeviceTokenReq)
      IMGetDeviceTokenReqOrBuilder {
    private IMGetDeviceTokenReq() {
      userId_ = emptyLongList();
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.LongList userId_;
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getUserIdList() {
      return userId_;
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    public int getUserIdCount() {
      return userId_.size();
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    public long getUserId(int index) {
      return userId_.getLong(index);
    }
    private void ensureUserIdIsMutable() {
      if (!userId_.isModifiable()) {
        userId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
       }
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    private void setUserId(
        int index, long value) {
      ensureUserIdIsMutable();
      userId_.setLong(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    private void addUserId(long value) {
      ensureUserIdIsMutable();
      userId_.addLong(value);
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    private void addAllUserId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureUserIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userId_);
    }
    /**
     * <pre>
     *cmd id:	0x0705
     * </pre>
     *
     * <code>repeated uint64 user_id = 1;</code>
     */
    private void clearUserId() {
      userId_ = emptyLongList();
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < userId_.size(); i++) {
        output.writeUInt64(1, userId_.getLong(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(userId_.getLong(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *db_proxy
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMGetDeviceTokenReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMGetDeviceTokenReq)
        com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getUserIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserIdList());
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public int getUserIdCount() {
        return instance.getUserIdCount();
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public long getUserId(int index) {
        return instance.getUserId(index);
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public Builder setUserId(
          int index, long value) {
        copyOnWrite();
        instance.setUserId(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public Builder addUserId(long value) {
        copyOnWrite();
        instance.addUserId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public Builder addAllUserId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllUserId(values);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0705
       * </pre>
       *
       * <code>repeated uint64 user_id = 1;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMGetDeviceTokenReq)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          userId_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq other = (com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq) arg1;
          userId_= visitor.visitLongList(userId_, other.userId_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!userId_.isModifiable()) {
                    userId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
                  }
                  userId_.addLong(input.readUInt64());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!userId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    userId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    userId_.addLong(input.readUInt64());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000001;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMGetDeviceTokenReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMGetDeviceTokenReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMGetDeviceTokenReq> PARSER;

    public static com.google.protobuf.Parser<IMGetDeviceTokenReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMGetDeviceTokenRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMGetDeviceTokenRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> 
        getUserTokenInfoList();
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenInfo(int index);
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    int getUserTokenInfoCount();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * <pre>
   *db_proxy
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMGetDeviceTokenRsp}
   */
  public  static final class IMGetDeviceTokenRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMGetDeviceTokenRsp, IMGetDeviceTokenRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMGetDeviceTokenRsp)
      IMGetDeviceTokenRspOrBuilder {
    private IMGetDeviceTokenRsp() {
      userTokenInfo_ = emptyProtobufList();
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int USER_TOKEN_INFO_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> userTokenInfo_;
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> getUserTokenInfoList() {
      return userTokenInfo_;
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfoOrBuilder> 
        getUserTokenInfoOrBuilderList() {
      return userTokenInfo_;
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    public int getUserTokenInfoCount() {
      return userTokenInfo_.size();
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenInfo(int index) {
      return userTokenInfo_.get(index);
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfoOrBuilder getUserTokenInfoOrBuilder(
        int index) {
      return userTokenInfo_.get(index);
    }
    private void ensureUserTokenInfoIsMutable() {
      if (!userTokenInfo_.isModifiable()) {
        userTokenInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userTokenInfo_);
       }
    }

    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void setUserTokenInfo(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.set(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void setUserTokenInfo(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void addUserTokenInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.add(value);
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void addUserTokenInfo(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.add(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void addUserTokenInfo(
        com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.add(builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void addUserTokenInfo(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void addAllUserTokenInfo(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> values) {
      ensureUserTokenInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userTokenInfo_);
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void clearUserTokenInfo() {
      userTokenInfo_ = emptyProtobufList();
    }
    /**
     * <pre>
     *cmd id:	0x0706
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
     */
    private void removeUserTokenInfo(int index) {
      ensureUserTokenInfoIsMutable();
      userTokenInfo_.remove(index);
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < userTokenInfo_.size(); i++) {
        output.writeMessage(1, userTokenInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userTokenInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userTokenInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *db_proxy
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMGetDeviceTokenRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMGetDeviceTokenRsp)
        com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> getUserTokenInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserTokenInfoList());
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public int getUserTokenInfoCount() {
        return instance.getUserTokenInfoCount();
      }/**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenInfo(int index) {
        return instance.getUserTokenInfo(index);
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder setUserTokenInfo(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.setUserTokenInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder setUserTokenInfo(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setUserTokenInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder addUserTokenInfo(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.addUserTokenInfo(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder addUserTokenInfo(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.addUserTokenInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder addUserTokenInfo(
          com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUserTokenInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder addUserTokenInfo(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUserTokenInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder addAllUserTokenInfo(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> values) {
        copyOnWrite();
        instance.addAllUserTokenInfo(values);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder clearUserTokenInfo() {
        copyOnWrite();
        instance.clearUserTokenInfo();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0706
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_info = 1;</code>
       */
      public Builder removeUserTokenInfo(int index) {
        copyOnWrite();
        instance.removeUserTokenInfo(index);
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMGetDeviceTokenRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUserTokenInfoCount(); i++) {
            if (!getUserTokenInfo(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          userTokenInfo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp other = (com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp) arg1;
          userTokenInfo_= visitor.visitList(userTokenInfo_, other.userTokenInfo_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!userTokenInfo_.isModifiable()) {
                    userTokenInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userTokenInfo_);
                  }
                  userTokenInfo_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.parser(), extensionRegistry));
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000001;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMGetDeviceTokenRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMGetDeviceTokenRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGetDeviceTokenRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMGetDeviceTokenRsp> PARSER;

    public static com.google.protobuf.Parser<IMGetDeviceTokenRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMRoleSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMRoleSet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    boolean hasMaster();
    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    int getMaster();
  }
  /**
   * Protobuf type {@code IM.Server.IMRoleSet}
   */
  public  static final class IMRoleSet extends
      com.google.protobuf.GeneratedMessageLite<
          IMRoleSet, IMRoleSet.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMRoleSet)
      IMRoleSetOrBuilder {
    private IMRoleSet() {
    }
    private int bitField0_;
    public static final int MASTER_FIELD_NUMBER = 1;
    private int master_;
    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    public boolean hasMaster() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    public int getMaster() {
      return master_;
    }
    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    private void setMaster(int value) {
      bitField0_ |= 0x00000001;
      master_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x0707
     * </pre>
     *
     * <code>required uint32 master = 1;</code>
     */
    private void clearMaster() {
      bitField0_ = (bitField0_ & ~0x00000001);
      master_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, master_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, master_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMRoleSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMRoleSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMRoleSet, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMRoleSet)
        com.blt.talk.common.code.proto.IMServer.IMRoleSetOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMRoleSet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0707
       * </pre>
       *
       * <code>required uint32 master = 1;</code>
       */
      public boolean hasMaster() {
        return instance.hasMaster();
      }
      /**
       * <pre>
       *cmd id:	0x0707
       * </pre>
       *
       * <code>required uint32 master = 1;</code>
       */
      public int getMaster() {
        return instance.getMaster();
      }
      /**
       * <pre>
       *cmd id:	0x0707
       * </pre>
       *
       * <code>required uint32 master = 1;</code>
       */
      public Builder setMaster(int value) {
        copyOnWrite();
        instance.setMaster(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0707
       * </pre>
       *
       * <code>required uint32 master = 1;</code>
       */
      public Builder clearMaster() {
        copyOnWrite();
        instance.clearMaster();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMRoleSet)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMRoleSet();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMaster()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMRoleSet other = (com.blt.talk.common.code.proto.IMServer.IMRoleSet) arg1;
          master_ = visitor.visitInt(
              hasMaster(), master_,
              other.hasMaster(), other.master_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  master_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMRoleSet.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMRoleSet)
    private static final com.blt.talk.common.code.proto.IMServer.IMRoleSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMRoleSet();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMRoleSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMRoleSet> PARSER;

    public static com.google.protobuf.Parser<IMRoleSet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMOnlineUserInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMOnlineUserInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> 
        getUserStatListList();
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat getUserStatList(int index);
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    int getUserStatListCount();
  }
  /**
   * Protobuf type {@code IM.Server.IMOnlineUserInfo}
   */
  public  static final class IMOnlineUserInfo extends
      com.google.protobuf.GeneratedMessageLite<
          IMOnlineUserInfo, IMOnlineUserInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMOnlineUserInfo)
      IMOnlineUserInfoOrBuilder {
    private IMOnlineUserInfo() {
      userStatList_ = emptyProtobufList();
    }
    public static final int USER_STAT_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> userStatList_;
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> getUserStatListList() {
      return userStatList_;
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStatOrBuilder> 
        getUserStatListOrBuilderList() {
      return userStatList_;
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    public int getUserStatListCount() {
      return userStatList_.size();
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat getUserStatList(int index) {
      return userStatList_.get(index);
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStatOrBuilder getUserStatListOrBuilder(
        int index) {
      return userStatList_.get(index);
    }
    private void ensureUserStatListIsMutable() {
      if (!userStatList_.isModifiable()) {
        userStatList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userStatList_);
       }
    }

    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void setUserStatList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserStatListIsMutable();
      userStatList_.set(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void setUserStatList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
      ensureUserStatListIsMutable();
      userStatList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void addUserStatList(com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserStatListIsMutable();
      userStatList_.add(value);
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void addUserStatList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserStatListIsMutable();
      userStatList_.add(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void addUserStatList(
        com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
      ensureUserStatListIsMutable();
      userStatList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void addUserStatList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
      ensureUserStatListIsMutable();
      userStatList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void addAllUserStatList(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> values) {
      ensureUserStatListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userStatList_);
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void clearUserStatList() {
      userStatList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *cmd id:	0x0708
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
     */
    private void removeUserStatList(int index) {
      ensureUserStatListIsMutable();
      userStatList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < userStatList_.size(); i++) {
        output.writeMessage(1, userStatList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userStatList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userStatList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMOnlineUserInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMOnlineUserInfo)
        com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfoOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> getUserStatListList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserStatListList());
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public int getUserStatListCount() {
        return instance.getUserStatListCount();
      }/**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat getUserStatList(int index) {
        return instance.getUserStatList(index);
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder setUserStatList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
        copyOnWrite();
        instance.setUserStatList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder setUserStatList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
        copyOnWrite();
        instance.setUserStatList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder addUserStatList(com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
        copyOnWrite();
        instance.addUserStatList(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder addUserStatList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat value) {
        copyOnWrite();
        instance.addUserStatList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder addUserStatList(
          com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
        copyOnWrite();
        instance.addUserStatList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder addUserStatList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.Builder builderForValue) {
        copyOnWrite();
        instance.addUserStatList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder addAllUserStatList(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat> values) {
        copyOnWrite();
        instance.addAllUserStatList(values);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder clearUserStatList() {
        copyOnWrite();
        instance.clearUserStatList();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0708
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.ServerUserStat user_stat_list = 1;</code>
       */
      public Builder removeUserStatList(int index) {
        copyOnWrite();
        instance.removeUserStatList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMOnlineUserInfo)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUserStatListCount(); i++) {
            if (!getUserStatList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          userStatList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo other = (com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo) arg1;
          userStatList_= visitor.visitList(userStatList_, other.userStatList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!userStatList_.isModifiable()) {
                    userStatList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userStatList_);
                  }
                  userStatList_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.ServerUserStat.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMOnlineUserInfo)
    private static final com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMOnlineUserInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMOnlineUserInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMOnlineUserInfo> PARSER;

    public static com.google.protobuf.Parser<IMOnlineUserInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMMsgServInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMMsgServInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    boolean hasIp1();
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    java.lang.String getIp1();
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    com.google.protobuf.ByteString
        getIp1Bytes();

    /**
     * <code>required string ip2 = 2;</code>
     */
    boolean hasIp2();
    /**
     * <code>required string ip2 = 2;</code>
     */
    java.lang.String getIp2();
    /**
     * <code>required string ip2 = 2;</code>
     */
    com.google.protobuf.ByteString
        getIp2Bytes();

    /**
     * <code>required uint32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>required uint32 port = 3;</code>
     */
    int getPort();

    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    boolean hasMaxConnCnt();
    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    int getMaxConnCnt();

    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    boolean hasCurConnCnt();
    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    int getCurConnCnt();

    /**
     * <code>required string host_name = 6;</code>
     */
    boolean hasHostName();
    /**
     * <code>required string host_name = 6;</code>
     */
    java.lang.String getHostName();
    /**
     * <code>required string host_name = 6;</code>
     */
    com.google.protobuf.ByteString
        getHostNameBytes();
  }
  /**
   * Protobuf type {@code IM.Server.IMMsgServInfo}
   */
  public  static final class IMMsgServInfo extends
      com.google.protobuf.GeneratedMessageLite<
          IMMsgServInfo, IMMsgServInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMMsgServInfo)
      IMMsgServInfoOrBuilder {
    private IMMsgServInfo() {
      ip1_ = "";
      ip2_ = "";
      hostName_ = "";
    }
    private int bitField0_;
    public static final int IP1_FIELD_NUMBER = 1;
    private java.lang.String ip1_;
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    public boolean hasIp1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    public java.lang.String getIp1() {
      return ip1_;
    }
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIp1Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ip1_);
    }
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    private void setIp1(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ip1_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    private void clearIp1() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ip1_ = getDefaultInstance().getIp1();
    }
    /**
     * <pre>
     *cmd id:	0x0709
     * </pre>
     *
     * <code>required string ip1 = 1;</code>
     */
    private void setIp1Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ip1_ = value.toStringUtf8();
    }

    public static final int IP2_FIELD_NUMBER = 2;
    private java.lang.String ip2_;
    /**
     * <code>required string ip2 = 2;</code>
     */
    public boolean hasIp2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ip2 = 2;</code>
     */
    public java.lang.String getIp2() {
      return ip2_;
    }
    /**
     * <code>required string ip2 = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIp2Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ip2_);
    }
    /**
     * <code>required string ip2 = 2;</code>
     */
    private void setIp2(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ip2_ = value;
    }
    /**
     * <code>required string ip2 = 2;</code>
     */
    private void clearIp2() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ip2_ = getDefaultInstance().getIp2();
    }
    /**
     * <code>required string ip2 = 2;</code>
     */
    private void setIp2Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ip2_ = value.toStringUtf8();
    }

    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>required uint32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }
    /**
     * <code>required uint32 port = 3;</code>
     */
    private void setPort(int value) {
      bitField0_ |= 0x00000004;
      port_ = value;
    }
    /**
     * <code>required uint32 port = 3;</code>
     */
    private void clearPort() {
      bitField0_ = (bitField0_ & ~0x00000004);
      port_ = 0;
    }

    public static final int MAX_CONN_CNT_FIELD_NUMBER = 4;
    private int maxConnCnt_;
    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    public boolean hasMaxConnCnt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    public int getMaxConnCnt() {
      return maxConnCnt_;
    }
    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    private void setMaxConnCnt(int value) {
      bitField0_ |= 0x00000008;
      maxConnCnt_ = value;
    }
    /**
     * <code>required uint32 max_conn_cnt = 4;</code>
     */
    private void clearMaxConnCnt() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxConnCnt_ = 0;
    }

    public static final int CUR_CONN_CNT_FIELD_NUMBER = 5;
    private int curConnCnt_;
    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    public boolean hasCurConnCnt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    public int getCurConnCnt() {
      return curConnCnt_;
    }
    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    private void setCurConnCnt(int value) {
      bitField0_ |= 0x00000010;
      curConnCnt_ = value;
    }
    /**
     * <code>required uint32 cur_conn_cnt = 5;</code>
     */
    private void clearCurConnCnt() {
      bitField0_ = (bitField0_ & ~0x00000010);
      curConnCnt_ = 0;
    }

    public static final int HOST_NAME_FIELD_NUMBER = 6;
    private java.lang.String hostName_;
    /**
     * <code>required string host_name = 6;</code>
     */
    public boolean hasHostName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string host_name = 6;</code>
     */
    public java.lang.String getHostName() {
      return hostName_;
    }
    /**
     * <code>required string host_name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getHostNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(hostName_);
    }
    /**
     * <code>required string host_name = 6;</code>
     */
    private void setHostName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      hostName_ = value;
    }
    /**
     * <code>required string host_name = 6;</code>
     */
    private void clearHostName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      hostName_ = getDefaultInstance().getHostName();
    }
    /**
     * <code>required string host_name = 6;</code>
     */
    private void setHostNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      hostName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getIp1());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getIp2());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, maxConnCnt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, curConnCnt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getHostName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIp1());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getIp2());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxConnCnt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, curConnCnt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getHostName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMMsgServInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMMsgServInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMMsgServInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMMsgServInfo)
        com.blt.talk.common.code.proto.IMServer.IMMsgServInfoOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMMsgServInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public boolean hasIp1() {
        return instance.hasIp1();
      }
      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public java.lang.String getIp1() {
        return instance.getIp1();
      }
      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIp1Bytes() {
        return instance.getIp1Bytes();
      }
      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public Builder setIp1(
          java.lang.String value) {
        copyOnWrite();
        instance.setIp1(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public Builder clearIp1() {
        copyOnWrite();
        instance.clearIp1();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0709
       * </pre>
       *
       * <code>required string ip1 = 1;</code>
       */
      public Builder setIp1Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIp1Bytes(value);
        return this;
      }

      /**
       * <code>required string ip2 = 2;</code>
       */
      public boolean hasIp2() {
        return instance.hasIp2();
      }
      /**
       * <code>required string ip2 = 2;</code>
       */
      public java.lang.String getIp2() {
        return instance.getIp2();
      }
      /**
       * <code>required string ip2 = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIp2Bytes() {
        return instance.getIp2Bytes();
      }
      /**
       * <code>required string ip2 = 2;</code>
       */
      public Builder setIp2(
          java.lang.String value) {
        copyOnWrite();
        instance.setIp2(value);
        return this;
      }
      /**
       * <code>required string ip2 = 2;</code>
       */
      public Builder clearIp2() {
        copyOnWrite();
        instance.clearIp2();
        return this;
      }
      /**
       * <code>required string ip2 = 2;</code>
       */
      public Builder setIp2Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIp2Bytes(value);
        return this;
      }

      /**
       * <code>required uint32 port = 3;</code>
       */
      public boolean hasPort() {
        return instance.hasPort();
      }
      /**
       * <code>required uint32 port = 3;</code>
       */
      public int getPort() {
        return instance.getPort();
      }
      /**
       * <code>required uint32 port = 3;</code>
       */
      public Builder setPort(int value) {
        copyOnWrite();
        instance.setPort(value);
        return this;
      }
      /**
       * <code>required uint32 port = 3;</code>
       */
      public Builder clearPort() {
        copyOnWrite();
        instance.clearPort();
        return this;
      }

      /**
       * <code>required uint32 max_conn_cnt = 4;</code>
       */
      public boolean hasMaxConnCnt() {
        return instance.hasMaxConnCnt();
      }
      /**
       * <code>required uint32 max_conn_cnt = 4;</code>
       */
      public int getMaxConnCnt() {
        return instance.getMaxConnCnt();
      }
      /**
       * <code>required uint32 max_conn_cnt = 4;</code>
       */
      public Builder setMaxConnCnt(int value) {
        copyOnWrite();
        instance.setMaxConnCnt(value);
        return this;
      }
      /**
       * <code>required uint32 max_conn_cnt = 4;</code>
       */
      public Builder clearMaxConnCnt() {
        copyOnWrite();
        instance.clearMaxConnCnt();
        return this;
      }

      /**
       * <code>required uint32 cur_conn_cnt = 5;</code>
       */
      public boolean hasCurConnCnt() {
        return instance.hasCurConnCnt();
      }
      /**
       * <code>required uint32 cur_conn_cnt = 5;</code>
       */
      public int getCurConnCnt() {
        return instance.getCurConnCnt();
      }
      /**
       * <code>required uint32 cur_conn_cnt = 5;</code>
       */
      public Builder setCurConnCnt(int value) {
        copyOnWrite();
        instance.setCurConnCnt(value);
        return this;
      }
      /**
       * <code>required uint32 cur_conn_cnt = 5;</code>
       */
      public Builder clearCurConnCnt() {
        copyOnWrite();
        instance.clearCurConnCnt();
        return this;
      }

      /**
       * <code>required string host_name = 6;</code>
       */
      public boolean hasHostName() {
        return instance.hasHostName();
      }
      /**
       * <code>required string host_name = 6;</code>
       */
      public java.lang.String getHostName() {
        return instance.getHostName();
      }
      /**
       * <code>required string host_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getHostNameBytes() {
        return instance.getHostNameBytes();
      }
      /**
       * <code>required string host_name = 6;</code>
       */
      public Builder setHostName(
          java.lang.String value) {
        copyOnWrite();
        instance.setHostName(value);
        return this;
      }
      /**
       * <code>required string host_name = 6;</code>
       */
      public Builder clearHostName() {
        copyOnWrite();
        instance.clearHostName();
        return this;
      }
      /**
       * <code>required string host_name = 6;</code>
       */
      public Builder setHostNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHostNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMMsgServInfo)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMMsgServInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasIp1()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIp2()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPort()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMaxConnCnt()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCurConnCnt()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHostName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMMsgServInfo other = (com.blt.talk.common.code.proto.IMServer.IMMsgServInfo) arg1;
          ip1_ = visitor.visitString(
              hasIp1(), ip1_,
              other.hasIp1(), other.ip1_);
          ip2_ = visitor.visitString(
              hasIp2(), ip2_,
              other.hasIp2(), other.ip2_);
          port_ = visitor.visitInt(
              hasPort(), port_,
              other.hasPort(), other.port_);
          maxConnCnt_ = visitor.visitInt(
              hasMaxConnCnt(), maxConnCnt_,
              other.hasMaxConnCnt(), other.maxConnCnt_);
          curConnCnt_ = visitor.visitInt(
              hasCurConnCnt(), curConnCnt_,
              other.hasCurConnCnt(), other.curConnCnt_);
          hostName_ = visitor.visitString(
              hasHostName(), hostName_,
              other.hasHostName(), other.hostName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ip1_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000002;
                  ip2_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  port_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  maxConnCnt_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  curConnCnt_ = input.readUInt32();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000020;
                  hostName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMMsgServInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMMsgServInfo)
    private static final com.blt.talk.common.code.proto.IMServer.IMMsgServInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMMsgServInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMMsgServInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMMsgServInfo> PARSER;

    public static com.google.protobuf.Parser<IMMsgServInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMUserStatusUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMUserStatusUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    boolean hasUserStatus();
    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    int getUserStatus();

    /**
     * <code>required uint64 user_id = 2;</code>
     */
    boolean hasUserId();
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    long getUserId();

    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    boolean hasClientType();
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType();
  }
  /**
   * Protobuf type {@code IM.Server.IMUserStatusUpdate}
   */
  public  static final class IMUserStatusUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          IMUserStatusUpdate, IMUserStatusUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMUserStatusUpdate)
      IMUserStatusUpdateOrBuilder {
    private IMUserStatusUpdate() {
      clientType_ = 1;
    }
    private int bitField0_;
    public static final int USER_STATUS_FIELD_NUMBER = 1;
    private int userStatus_;
    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    public boolean hasUserStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    public int getUserStatus() {
      return userStatus_;
    }
    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    private void setUserStatus(int value) {
      bitField0_ |= 0x00000001;
      userStatus_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x070a
     * </pre>
     *
     * <code>required uint32 user_status = 1;</code>
     */
    private void clearUserStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userStatus_ = 0;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private long userId_;
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    private void setUserId(long value) {
      bitField0_ |= 0x00000002;
      userId_ = value;
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      userId_ = 0L;
    }

    public static final int CLIENT_TYPE_FIELD_NUMBER = 3;
    private int clientType_;
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType() {
      com.blt.talk.common.code.proto.IMBaseDefine.ClientType result = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(clientType_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.ClientType.CLIENT_TYPE_WINDOWS : result;
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    private void setClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      clientType_ = value.getNumber();
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
     */
    private void clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      clientType_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, userStatus_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, clientType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, userStatus_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, clientType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMUserStatusUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMUserStatusUpdate)
        com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdateOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x070a
       * </pre>
       *
       * <code>required uint32 user_status = 1;</code>
       */
      public boolean hasUserStatus() {
        return instance.hasUserStatus();
      }
      /**
       * <pre>
       *cmd id:	0x070a
       * </pre>
       *
       * <code>required uint32 user_status = 1;</code>
       */
      public int getUserStatus() {
        return instance.getUserStatus();
      }
      /**
       * <pre>
       *cmd id:	0x070a
       * </pre>
       *
       * <code>required uint32 user_status = 1;</code>
       */
      public Builder setUserStatus(int value) {
        copyOnWrite();
        instance.setUserStatus(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070a
       * </pre>
       *
       * <code>required uint32 user_status = 1;</code>
       */
      public Builder clearUserStatus() {
        copyOnWrite();
        instance.clearUserStatus();
        return this;
      }

      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public long getUserId() {
        return instance.getUserId();
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public Builder setUserId(long value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
       */
      public boolean hasClientType() {
        return instance.hasClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType() {
        return instance.getClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
       */
      public Builder setClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
        copyOnWrite();
        instance.setClientType(value);
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 3;</code>
       */
      public Builder clearClientType() {
        copyOnWrite();
        instance.clearClientType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMUserStatusUpdate)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasClientType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate other = (com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate) arg1;
          userStatus_ = visitor.visitInt(
              hasUserStatus(), userStatus_,
              other.hasUserStatus(), other.userStatus_);
          userId_ = visitor.visitLong(
              hasUserId(), userId_,
              other.hasUserId(), other.userId_);
          clientType_ = visitor.visitInt(hasClientType(), clientType_,
              other.hasClientType(), other.clientType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  userStatus_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  userId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.ClientType value = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    clientType_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMUserStatusUpdate)
    private static final com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMUserStatusUpdate();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMUserStatusUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMUserStatusUpdate> PARSER;

    public static com.google.protobuf.Parser<IMUserStatusUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMUserCntUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMUserCntUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    boolean hasUserAction();
    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    int getUserAction();

    /**
     * <code>required uint64 user_id = 2;</code>
     */
    boolean hasUserId();
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    long getUserId();
  }
  /**
   * Protobuf type {@code IM.Server.IMUserCntUpdate}
   */
  public  static final class IMUserCntUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          IMUserCntUpdate, IMUserCntUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMUserCntUpdate)
      IMUserCntUpdateOrBuilder {
    private IMUserCntUpdate() {
    }
    private int bitField0_;
    public static final int USER_ACTION_FIELD_NUMBER = 1;
    private int userAction_;
    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    public boolean hasUserAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    public int getUserAction() {
      return userAction_;
    }
    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    private void setUserAction(int value) {
      bitField0_ |= 0x00000001;
      userAction_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x070b
     * </pre>
     *
     * <code>required uint32 user_action = 1;</code>
     */
    private void clearUserAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userAction_ = 0;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private long userId_;
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    private void setUserId(long value) {
      bitField0_ |= 0x00000002;
      userId_ = value;
    }
    /**
     * <code>required uint64 user_id = 2;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      userId_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, userAction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, userId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, userAction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, userId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMUserCntUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMUserCntUpdate)
        com.blt.talk.common.code.proto.IMServer.IMUserCntUpdateOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x070b
       * </pre>
       *
       * <code>required uint32 user_action = 1;</code>
       */
      public boolean hasUserAction() {
        return instance.hasUserAction();
      }
      /**
       * <pre>
       *cmd id:	0x070b
       * </pre>
       *
       * <code>required uint32 user_action = 1;</code>
       */
      public int getUserAction() {
        return instance.getUserAction();
      }
      /**
       * <pre>
       *cmd id:	0x070b
       * </pre>
       *
       * <code>required uint32 user_action = 1;</code>
       */
      public Builder setUserAction(int value) {
        copyOnWrite();
        instance.setUserAction(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070b
       * </pre>
       *
       * <code>required uint32 user_action = 1;</code>
       */
      public Builder clearUserAction() {
        copyOnWrite();
        instance.clearUserAction();
        return this;
      }

      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public long getUserId() {
        return instance.getUserId();
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public Builder setUserId(long value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <code>required uint64 user_id = 2;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMUserCntUpdate)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate other = (com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate) arg1;
          userAction_ = visitor.visitInt(
              hasUserAction(), userAction_,
              other.hasUserAction(), other.userAction_);
          userId_ = visitor.visitLong(
              hasUserId(), userId_,
              other.hasUserId(), other.userId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  userAction_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  userId_ = input.readUInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMUserCntUpdate)
    private static final com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMUserCntUpdate();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMUserCntUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMUserCntUpdate> PARSER;

    public static com.google.protobuf.Parser<IMUserCntUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMServerKickUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMServerKickUser)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    boolean hasUserId();
    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    long getUserId();

    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    boolean hasClientType();
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType();

    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    boolean hasReason();
    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    int getReason();
  }
  /**
   * Protobuf type {@code IM.Server.IMServerKickUser}
   */
  public  static final class IMServerKickUser extends
      com.google.protobuf.GeneratedMessageLite<
          IMServerKickUser, IMServerKickUser.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMServerKickUser)
      IMServerKickUserOrBuilder {
    private IMServerKickUser() {
      clientType_ = 1;
    }
    private int bitField0_;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private long userId_;
    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    private void setUserId(long value) {
      bitField0_ |= 0x00000001;
      userId_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x070d
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userId_ = 0L;
    }

    public static final int CLIENT_TYPE_FIELD_NUMBER = 2;
    private int clientType_;
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType() {
      com.blt.talk.common.code.proto.IMBaseDefine.ClientType result = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(clientType_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.ClientType.CLIENT_TYPE_WINDOWS : result;
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    private void setClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      clientType_ = value.getNumber();
    }
    /**
     * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
     */
    private void clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      clientType_ = 1;
    }

    public static final int REASON_FIELD_NUMBER = 3;
    private int reason_;
    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    public int getReason() {
      return reason_;
    }
    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    private void setReason(int value) {
      bitField0_ |= 0x00000004;
      reason_ = value;
    }
    /**
     * <pre>
     *KICK_REASON_DUPLICATE_USER = 1;
     * </pre>
     *
     * <code>required uint32 reason = 3;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      reason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, clientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, reason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, clientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMServerKickUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMServerKickUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMServerKickUser, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMServerKickUser)
        com.blt.talk.common.code.proto.IMServer.IMServerKickUserOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMServerKickUser.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x070d
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <pre>
       *cmd id:	0x070d
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public long getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       *cmd id:	0x070d
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public Builder setUserId(long value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070d
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
       */
      public boolean hasClientType() {
        return instance.hasClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getClientType() {
        return instance.getClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
       */
      public Builder setClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
        copyOnWrite();
        instance.setClientType(value);
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.ClientType client_type = 2;</code>
       */
      public Builder clearClientType() {
        copyOnWrite();
        instance.clearClientType();
        return this;
      }

      /**
       * <pre>
       *KICK_REASON_DUPLICATE_USER = 1;
       * </pre>
       *
       * <code>required uint32 reason = 3;</code>
       */
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <pre>
       *KICK_REASON_DUPLICATE_USER = 1;
       * </pre>
       *
       * <code>required uint32 reason = 3;</code>
       */
      public int getReason() {
        return instance.getReason();
      }
      /**
       * <pre>
       *KICK_REASON_DUPLICATE_USER = 1;
       * </pre>
       *
       * <code>required uint32 reason = 3;</code>
       */
      public Builder setReason(int value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <pre>
       *KICK_REASON_DUPLICATE_USER = 1;
       * </pre>
       *
       * <code>required uint32 reason = 3;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMServerKickUser)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMServerKickUser();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasClientType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMServerKickUser other = (com.blt.talk.common.code.proto.IMServer.IMServerKickUser) arg1;
          userId_ = visitor.visitLong(
              hasUserId(), userId_,
              other.hasUserId(), other.userId_);
          clientType_ = visitor.visitInt(hasClientType(), clientType_,
              other.hasClientType(), other.clientType_);
          reason_ = visitor.visitInt(
              hasReason(), reason_,
              other.hasReason(), other.reason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  userId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.ClientType value = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    clientType_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  reason_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMServerKickUser.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMServerKickUser)
    private static final com.blt.talk.common.code.proto.IMServer.IMServerKickUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMServerKickUser();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMServerKickUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMServerKickUser> PARSER;

    public static com.google.protobuf.Parser<IMServerKickUser> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMServerPCLoginStatusNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMServerPCLoginStatusNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    boolean hasUserId();
    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    long getUserId();

    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    boolean hasLoginStatus();
    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    int getLoginStatus();
  }
  /**
   * Protobuf type {@code IM.Server.IMServerPCLoginStatusNotify}
   */
  public  static final class IMServerPCLoginStatusNotify extends
      com.google.protobuf.GeneratedMessageLite<
          IMServerPCLoginStatusNotify, IMServerPCLoginStatusNotify.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMServerPCLoginStatusNotify)
      IMServerPCLoginStatusNotifyOrBuilder {
    private IMServerPCLoginStatusNotify() {
    }
    private int bitField0_;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private long userId_;
    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    private void setUserId(long value) {
      bitField0_ |= 0x00000001;
      userId_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x070e
     * </pre>
     *
     * <code>required uint64 user_id = 1;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userId_ = 0L;
    }

    public static final int LOGIN_STATUS_FIELD_NUMBER = 2;
    private int loginStatus_;
    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    public boolean hasLoginStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    public int getLoginStatus() {
      return loginStatus_;
    }
    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    private void setLoginStatus(int value) {
      bitField0_ |= 0x00000002;
      loginStatus_ = value;
    }
    /**
     * <pre>
     *1: on   0: off
     * </pre>
     *
     * <code>required uint32 login_status = 2;</code>
     */
    private void clearLoginStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      loginStatus_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, loginStatus_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, loginStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMServerPCLoginStatusNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMServerPCLoginStatusNotify)
        com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotifyOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x070e
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <pre>
       *cmd id:	0x070e
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public long getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       *cmd id:	0x070e
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public Builder setUserId(long value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070e
       * </pre>
       *
       * <code>required uint64 user_id = 1;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <pre>
       *1: on   0: off
       * </pre>
       *
       * <code>required uint32 login_status = 2;</code>
       */
      public boolean hasLoginStatus() {
        return instance.hasLoginStatus();
      }
      /**
       * <pre>
       *1: on   0: off
       * </pre>
       *
       * <code>required uint32 login_status = 2;</code>
       */
      public int getLoginStatus() {
        return instance.getLoginStatus();
      }
      /**
       * <pre>
       *1: on   0: off
       * </pre>
       *
       * <code>required uint32 login_status = 2;</code>
       */
      public Builder setLoginStatus(int value) {
        copyOnWrite();
        instance.setLoginStatus(value);
        return this;
      }
      /**
       * <pre>
       *1: on   0: off
       * </pre>
       *
       * <code>required uint32 login_status = 2;</code>
       */
      public Builder clearLoginStatus() {
        copyOnWrite();
        instance.clearLoginStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMServerPCLoginStatusNotify)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLoginStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify other = (com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify) arg1;
          userId_ = visitor.visitLong(
              hasUserId(), userId_,
              other.hasUserId(), other.userId_);
          loginStatus_ = visitor.visitInt(
              hasLoginStatus(), loginStatus_,
              other.hasLoginStatus(), other.loginStatus_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  userId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  loginStatus_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMServerPCLoginStatusNotify)
    private static final com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMServerPCLoginStatusNotify();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMServerPCLoginStatusNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMServerPCLoginStatusNotify> PARSER;

    public static com.google.protobuf.Parser<IMServerPCLoginStatusNotify> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMPushToUserReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMPushToUserReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    boolean hasFlash();
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    java.lang.String getFlash();
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    com.google.protobuf.ByteString
        getFlashBytes();

    /**
     * <code>required string data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>required string data = 2;</code>
     */
    java.lang.String getData();
    /**
     * <code>required string data = 2;</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> 
        getUserTokenListList();
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenList(int index);
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    int getUserTokenListCount();
  }
  /**
   * Protobuf type {@code IM.Server.IMPushToUserReq}
   */
  public  static final class IMPushToUserReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMPushToUserReq, IMPushToUserReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMPushToUserReq)
      IMPushToUserReqOrBuilder {
    private IMPushToUserReq() {
      flash_ = "";
      data_ = "";
      userTokenList_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int FLASH_FIELD_NUMBER = 1;
    private java.lang.String flash_;
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    public boolean hasFlash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    public java.lang.String getFlash() {
      return flash_;
    }
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFlashBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(flash_);
    }
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    private void setFlash(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      flash_ = value;
    }
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    private void clearFlash() {
      bitField0_ = (bitField0_ & ~0x00000001);
      flash_ = getDefaultInstance().getFlash();
    }
    /**
     * <pre>
     *cmd id:	0x070f
     * </pre>
     *
     * <code>required string flash = 1;</code>
     */
    private void setFlashBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      flash_ = value.toStringUtf8();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.lang.String data_;
    /**
     * <code>required string data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string data = 2;</code>
     */
    public java.lang.String getData() {
      return data_;
    }
    /**
     * <code>required string data = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(data_);
    }
    /**
     * <code>required string data = 2;</code>
     */
    private void setData(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <code>required string data = 2;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }
    /**
     * <code>required string data = 2;</code>
     */
    private void setDataBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value.toStringUtf8();
    }

    public static final int USER_TOKEN_LIST_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> userTokenList_;
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> getUserTokenListList() {
      return userTokenList_;
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfoOrBuilder> 
        getUserTokenListOrBuilderList() {
      return userTokenList_;
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    public int getUserTokenListCount() {
      return userTokenList_.size();
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenList(int index) {
      return userTokenList_.get(index);
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfoOrBuilder getUserTokenListOrBuilder(
        int index) {
      return userTokenList_.get(index);
    }
    private void ensureUserTokenListIsMutable() {
      if (!userTokenList_.isModifiable()) {
        userTokenList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userTokenList_);
       }
    }

    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void setUserTokenList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenListIsMutable();
      userTokenList_.set(index, value);
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void setUserTokenList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenListIsMutable();
      userTokenList_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void addUserTokenList(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenListIsMutable();
      userTokenList_.add(value);
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void addUserTokenList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserTokenListIsMutable();
      userTokenList_.add(index, value);
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void addUserTokenList(
        com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenListIsMutable();
      userTokenList_.add(builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void addUserTokenList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
      ensureUserTokenListIsMutable();
      userTokenList_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void addAllUserTokenList(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> values) {
      ensureUserTokenListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userTokenList_);
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void clearUserTokenList() {
      userTokenList_ = emptyProtobufList();
    }
    /**
     * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
     */
    private void removeUserTokenList(int index) {
      ensureUserTokenListIsMutable();
      userTokenList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getFlash());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getData());
      }
      for (int i = 0; i < userTokenList_.size(); i++) {
        output.writeMessage(3, userTokenList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFlash());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getData());
      }
      for (int i = 0; i < userTokenList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, userTokenList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMPushToUserReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMPushToUserReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMPushToUserReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMPushToUserReq)
        com.blt.talk.common.code.proto.IMServer.IMPushToUserReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMPushToUserReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public boolean hasFlash() {
        return instance.hasFlash();
      }
      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public java.lang.String getFlash() {
        return instance.getFlash();
      }
      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFlashBytes() {
        return instance.getFlashBytes();
      }
      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public Builder setFlash(
          java.lang.String value) {
        copyOnWrite();
        instance.setFlash(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public Builder clearFlash() {
        copyOnWrite();
        instance.clearFlash();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x070f
       * </pre>
       *
       * <code>required string flash = 1;</code>
       */
      public Builder setFlashBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFlashBytes(value);
        return this;
      }

      /**
       * <code>required string data = 2;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>required string data = 2;</code>
       */
      public java.lang.String getData() {
        return instance.getData();
      }
      /**
       * <code>required string data = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        return instance.getDataBytes();
      }
      /**
       * <code>required string data = 2;</code>
       */
      public Builder setData(
          java.lang.String value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>required string data = 2;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }
      /**
       * <code>required string data = 2;</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataBytes(value);
        return this;
      }

      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> getUserTokenListList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserTokenListList());
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public int getUserTokenListCount() {
        return instance.getUserTokenListCount();
      }/**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo getUserTokenList(int index) {
        return instance.getUserTokenList(index);
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder setUserTokenList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.setUserTokenList(index, value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder setUserTokenList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setUserTokenList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder addUserTokenList(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.addUserTokenList(value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder addUserTokenList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo value) {
        copyOnWrite();
        instance.addUserTokenList(index, value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder addUserTokenList(
          com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUserTokenList(builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder addUserTokenList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUserTokenList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder addAllUserTokenList(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo> values) {
        copyOnWrite();
        instance.addAllUserTokenList(values);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder clearUserTokenList() {
        copyOnWrite();
        instance.clearUserTokenList();
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.UserTokenInfo user_token_list = 3;</code>
       */
      public Builder removeUserTokenList(int index) {
        copyOnWrite();
        instance.removeUserTokenList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMPushToUserReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMPushToUserReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFlash()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasData()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getUserTokenListCount(); i++) {
            if (!getUserTokenList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          userTokenList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMPushToUserReq other = (com.blt.talk.common.code.proto.IMServer.IMPushToUserReq) arg1;
          flash_ = visitor.visitString(
              hasFlash(), flash_,
              other.hasFlash(), other.flash_);
          data_ = visitor.visitString(
              hasData(), data_,
              other.hasData(), other.data_);
          userTokenList_= visitor.visitList(userTokenList_, other.userTokenList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  flash_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000002;
                  data_ = s;
                  break;
                }
                case 26: {
                  if (!userTokenList_.isModifiable()) {
                    userTokenList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userTokenList_);
                  }
                  userTokenList_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.UserTokenInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMPushToUserReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMPushToUserReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMPushToUserReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMPushToUserReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMPushToUserReq> PARSER;

    public static com.google.protobuf.Parser<IMPushToUserReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMPushToUserRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMPushToUserRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.PushResult> 
        getPushResultListList();
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.PushResult getPushResultList(int index);
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    int getPushResultListCount();
  }
  /**
   * Protobuf type {@code IM.Server.IMPushToUserRsp}
   */
  public  static final class IMPushToUserRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMPushToUserRsp, IMPushToUserRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMPushToUserRsp)
      IMPushToUserRspOrBuilder {
    private IMPushToUserRsp() {
      pushResultList_ = emptyProtobufList();
    }
    public static final int PUSH_RESULT_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.PushResult> pushResultList_;
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.PushResult> getPushResultListList() {
      return pushResultList_;
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.PushResultOrBuilder> 
        getPushResultListOrBuilderList() {
      return pushResultList_;
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    public int getPushResultListCount() {
      return pushResultList_.size();
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.PushResult getPushResultList(int index) {
      return pushResultList_.get(index);
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.PushResultOrBuilder getPushResultListOrBuilder(
        int index) {
      return pushResultList_.get(index);
    }
    private void ensurePushResultListIsMutable() {
      if (!pushResultList_.isModifiable()) {
        pushResultList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(pushResultList_);
       }
    }

    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void setPushResultList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushResultListIsMutable();
      pushResultList_.set(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void setPushResultList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
      ensurePushResultListIsMutable();
      pushResultList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void addPushResultList(com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushResultListIsMutable();
      pushResultList_.add(value);
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void addPushResultList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushResultListIsMutable();
      pushResultList_.add(index, value);
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void addPushResultList(
        com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
      ensurePushResultListIsMutable();
      pushResultList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void addPushResultList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
      ensurePushResultListIsMutable();
      pushResultList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void addAllPushResultList(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.PushResult> values) {
      ensurePushResultListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, pushResultList_);
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void clearPushResultList() {
      pushResultList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *cmd id:	0x0710
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
     */
    private void removePushResultList(int index) {
      ensurePushResultListIsMutable();
      pushResultList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pushResultList_.size(); i++) {
        output.writeMessage(1, pushResultList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pushResultList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pushResultList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMPushToUserRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMPushToUserRsp)
        com.blt.talk.common.code.proto.IMServer.IMPushToUserRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.PushResult> getPushResultListList() {
        return java.util.Collections.unmodifiableList(
            instance.getPushResultListList());
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public int getPushResultListCount() {
        return instance.getPushResultListCount();
      }/**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.PushResult getPushResultList(int index) {
        return instance.getPushResultList(index);
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder setPushResultList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
        copyOnWrite();
        instance.setPushResultList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder setPushResultList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
        copyOnWrite();
        instance.setPushResultList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder addPushResultList(com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
        copyOnWrite();
        instance.addPushResultList(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder addPushResultList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult value) {
        copyOnWrite();
        instance.addPushResultList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder addPushResultList(
          com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
        copyOnWrite();
        instance.addPushResultList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder addPushResultList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.PushResult.Builder builderForValue) {
        copyOnWrite();
        instance.addPushResultList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder addAllPushResultList(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.PushResult> values) {
        copyOnWrite();
        instance.addAllPushResultList(values);
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder clearPushResultList() {
        copyOnWrite();
        instance.clearPushResultList();
        return this;
      }
      /**
       * <pre>
       *cmd id:	0x0710
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.PushResult push_result_list = 1;</code>
       */
      public Builder removePushResultList(int index) {
        copyOnWrite();
        instance.removePushResultList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMPushToUserRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getPushResultListCount(); i++) {
            if (!getPushResultList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          pushResultList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp other = (com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp) arg1;
          pushResultList_= visitor.visitList(pushResultList_, other.pushResultList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!pushResultList_.isModifiable()) {
                    pushResultList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pushResultList_);
                  }
                  pushResultList_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.PushResult.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMPushToUserRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMPushToUserRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMPushToUserRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMPushToUserRsp> PARSER;

    public static com.google.protobuf.Parser<IMPushToUserRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMGroupGetShieldReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMGroupGetShieldReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    boolean hasGroupId();
    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    long getGroupId();

    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    java.util.List<java.lang.Long> getUserIdList();
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    int getUserIdCount();
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    long getUserId(int index);

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.Server.IMGroupGetShieldReq}
   */
  public  static final class IMGroupGetShieldReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMGroupGetShieldReq, IMGroupGetShieldReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMGroupGetShieldReq)
      IMGroupGetShieldReqOrBuilder {
    private IMGroupGetShieldReq() {
      userId_ = emptyLongList();
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private long groupId_;
    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    public long getGroupId() {
      return groupId_;
    }
    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    private void setGroupId(long value) {
      bitField0_ |= 0x00000001;
      groupId_ = value;
    }
    /**
     * <pre>
     *cmd id:			0x0711
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    private void clearGroupId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      groupId_ = 0L;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.LongList userId_;
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getUserIdList() {
      return userId_;
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    public int getUserIdCount() {
      return userId_.size();
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    public long getUserId(int index) {
      return userId_.getLong(index);
    }
    private void ensureUserIdIsMutable() {
      if (!userId_.isModifiable()) {
        userId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
       }
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    private void setUserId(
        int index, long value) {
      ensureUserIdIsMutable();
      userId_.setLong(index, value);
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    private void addUserId(long value) {
      ensureUserIdIsMutable();
      userId_.addLong(value);
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    private void addAllUserId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureUserIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userId_);
    }
    /**
     * <code>repeated uint64 user_id = 2;</code>
     */
    private void clearUserId() {
      userId_ = emptyLongList();
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, groupId_);
      }
      for (int i = 0; i < userId_.size(); i++) {
        output.writeUInt64(2, userId_.getLong(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, groupId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(userId_.getLong(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMGroupGetShieldReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMGroupGetShieldReq)
        com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:			0x0711
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return instance.hasGroupId();
      }
      /**
       * <pre>
       *cmd id:			0x0711
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public long getGroupId() {
        return instance.getGroupId();
      }
      /**
       * <pre>
       *cmd id:			0x0711
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public Builder setGroupId(long value) {
        copyOnWrite();
        instance.setGroupId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0711
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        copyOnWrite();
        instance.clearGroupId();
        return this;
      }

      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getUserIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserIdList());
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public int getUserIdCount() {
        return instance.getUserIdCount();
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public long getUserId(int index) {
        return instance.getUserId(index);
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public Builder setUserId(
          int index, long value) {
        copyOnWrite();
        instance.setUserId(index, value);
        return this;
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public Builder addUserId(long value) {
        copyOnWrite();
        instance.addUserId(value);
        return this;
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public Builder addAllUserId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllUserId(values);
        return this;
      }
      /**
       * <code>repeated uint64 user_id = 2;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMGroupGetShieldReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGroupId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          userId_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq other = (com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq) arg1;
          groupId_ = visitor.visitLong(
              hasGroupId(), groupId_,
              other.hasGroupId(), other.groupId_);
          userId_= visitor.visitLongList(userId_, other.userId_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  groupId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  if (!userId_.isModifiable()) {
                    userId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
                  }
                  userId_.addLong(input.readUInt64());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!userId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    userId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userId_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    userId_.addLong(input.readUInt64());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000002;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMGroupGetShieldReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMGroupGetShieldReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMGroupGetShieldReq> PARSER;

    public static com.google.protobuf.Parser<IMGroupGetShieldReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMGroupGetShieldRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMGroupGetShieldRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    boolean hasGroupId();
    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    long getGroupId();

    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> 
        getShieldStatusListList();
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus getShieldStatusList(int index);
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    int getShieldStatusListCount();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.Server.IMGroupGetShieldRsp}
   */
  public  static final class IMGroupGetShieldRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMGroupGetShieldRsp, IMGroupGetShieldRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMGroupGetShieldRsp)
      IMGroupGetShieldRspOrBuilder {
    private IMGroupGetShieldRsp() {
      shieldStatusList_ = emptyProtobufList();
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private long groupId_;
    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    public long getGroupId() {
      return groupId_;
    }
    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    private void setGroupId(long value) {
      bitField0_ |= 0x00000001;
      groupId_ = value;
    }
    /**
     * <pre>
     *cmd id: 			0x0712
     * </pre>
     *
     * <code>required uint64 group_id = 1;</code>
     */
    private void clearGroupId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      groupId_ = 0L;
    }

    public static final int SHIELD_STATUS_LIST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> shieldStatusList_;
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> getShieldStatusListList() {
      return shieldStatusList_;
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatusOrBuilder> 
        getShieldStatusListOrBuilderList() {
      return shieldStatusList_;
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    public int getShieldStatusListCount() {
      return shieldStatusList_.size();
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus getShieldStatusList(int index) {
      return shieldStatusList_.get(index);
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatusOrBuilder getShieldStatusListOrBuilder(
        int index) {
      return shieldStatusList_.get(index);
    }
    private void ensureShieldStatusListIsMutable() {
      if (!shieldStatusList_.isModifiable()) {
        shieldStatusList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(shieldStatusList_);
       }
    }

    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void setShieldStatusList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureShieldStatusListIsMutable();
      shieldStatusList_.set(index, value);
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void setShieldStatusList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
      ensureShieldStatusListIsMutable();
      shieldStatusList_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void addShieldStatusList(com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureShieldStatusListIsMutable();
      shieldStatusList_.add(value);
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void addShieldStatusList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureShieldStatusListIsMutable();
      shieldStatusList_.add(index, value);
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void addShieldStatusList(
        com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
      ensureShieldStatusListIsMutable();
      shieldStatusList_.add(builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void addShieldStatusList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
      ensureShieldStatusListIsMutable();
      shieldStatusList_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void addAllShieldStatusList(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> values) {
      ensureShieldStatusListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, shieldStatusList_);
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void clearShieldStatusList() {
      shieldStatusList_ = emptyProtobufList();
    }
    /**
     * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
     */
    private void removeShieldStatusList(int index) {
      ensureShieldStatusListIsMutable();
      shieldStatusList_.remove(index);
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, groupId_);
      }
      for (int i = 0; i < shieldStatusList_.size(); i++) {
        output.writeMessage(2, shieldStatusList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, groupId_);
      }
      for (int i = 0; i < shieldStatusList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, shieldStatusList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMGroupGetShieldRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMGroupGetShieldRsp)
        com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id: 			0x0712
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return instance.hasGroupId();
      }
      /**
       * <pre>
       *cmd id: 			0x0712
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public long getGroupId() {
        return instance.getGroupId();
      }
      /**
       * <pre>
       *cmd id: 			0x0712
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public Builder setGroupId(long value) {
        copyOnWrite();
        instance.setGroupId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id: 			0x0712
       * </pre>
       *
       * <code>required uint64 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        copyOnWrite();
        instance.clearGroupId();
        return this;
      }

      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> getShieldStatusListList() {
        return java.util.Collections.unmodifiableList(
            instance.getShieldStatusListList());
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public int getShieldStatusListCount() {
        return instance.getShieldStatusListCount();
      }/**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus getShieldStatusList(int index) {
        return instance.getShieldStatusList(index);
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder setShieldStatusList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
        copyOnWrite();
        instance.setShieldStatusList(index, value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder setShieldStatusList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
        copyOnWrite();
        instance.setShieldStatusList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder addShieldStatusList(com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
        copyOnWrite();
        instance.addShieldStatusList(value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder addShieldStatusList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus value) {
        copyOnWrite();
        instance.addShieldStatusList(index, value);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder addShieldStatusList(
          com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
        copyOnWrite();
        instance.addShieldStatusList(builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder addShieldStatusList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.Builder builderForValue) {
        copyOnWrite();
        instance.addShieldStatusList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder addAllShieldStatusList(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus> values) {
        copyOnWrite();
        instance.addAllShieldStatusList(values);
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder clearShieldStatusList() {
        copyOnWrite();
        instance.clearShieldStatusList();
        return this;
      }
      /**
       * <code>repeated .IM.BaseDefine.ShieldStatus shield_status_list = 2;</code>
       */
      public Builder removeShieldStatusList(int index) {
        copyOnWrite();
        instance.removeShieldStatusList(index);
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMGroupGetShieldRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGroupId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getShieldStatusListCount(); i++) {
            if (!getShieldStatusList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          shieldStatusList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp other = (com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp) arg1;
          groupId_ = visitor.visitLong(
              hasGroupId(), groupId_,
              other.hasGroupId(), other.groupId_);
          shieldStatusList_= visitor.visitList(shieldStatusList_, other.shieldStatusList_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  groupId_ = input.readUInt64();
                  break;
                }
                case 18: {
                  if (!shieldStatusList_.isModifiable()) {
                    shieldStatusList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(shieldStatusList_);
                  }
                  shieldStatusList_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.ShieldStatus.parser(), extensionRegistry));
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000002;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMGroupGetShieldRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMGroupGetShieldRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMGroupGetShieldRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMGroupGetShieldRsp> PARSER;

    public static com.google.protobuf.Parser<IMGroupGetShieldRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMFileTransferReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMFileTransferReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    boolean hasFromUserId();
    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    long getFromUserId();

    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    boolean hasToUserId();
    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    long getToUserId();

    /**
     * <code>required string file_name = 3;</code>
     */
    boolean hasFileName();
    /**
     * <code>required string file_name = 3;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>required string file_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>required uint32 file_size = 4;</code>
     */
    boolean hasFileSize();
    /**
     * <code>required uint32 file_size = 4;</code>
     */
    int getFileSize();

    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    boolean hasTransMode();
    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.Server.IMFileTransferReq}
   */
  public  static final class IMFileTransferReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMFileTransferReq, IMFileTransferReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMFileTransferReq)
      IMFileTransferReqOrBuilder {
    private IMFileTransferReq() {
      fileName_ = "";
      transMode_ = 1;
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private long fromUserId_;
    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    public long getFromUserId() {
      return fromUserId_;
    }
    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    private void setFromUserId(long value) {
      bitField0_ |= 0x00000001;
      fromUserId_ = value;
    }
    /**
     * <pre>
     *cmd id:			0x0715
     * </pre>
     *
     * <code>required uint64 from_user_id = 1;</code>
     */
    private void clearFromUserId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromUserId_ = 0L;
    }

    public static final int TO_USER_ID_FIELD_NUMBER = 2;
    private long toUserId_;
    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    public boolean hasToUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    public long getToUserId() {
      return toUserId_;
    }
    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    private void setToUserId(long value) {
      bitField0_ |= 0x00000002;
      toUserId_ = value;
    }
    /**
     * <code>required uint64 to_user_id = 2;</code>
     */
    private void clearToUserId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toUserId_ = 0L;
    }

    public static final int FILE_NAME_FIELD_NUMBER = 3;
    private java.lang.String fileName_;
    /**
     * <code>required string file_name = 3;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string file_name = 3;</code>
     */
    public java.lang.String getFileName() {
      return fileName_;
    }
    /**
     * <code>required string file_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fileName_);
    }
    /**
     * <code>required string file_name = 3;</code>
     */
    private void setFileName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      fileName_ = value;
    }
    /**
     * <code>required string file_name = 3;</code>
     */
    private void clearFileName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fileName_ = getDefaultInstance().getFileName();
    }
    /**
     * <code>required string file_name = 3;</code>
     */
    private void setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      fileName_ = value.toStringUtf8();
    }

    public static final int FILE_SIZE_FIELD_NUMBER = 4;
    private int fileSize_;
    /**
     * <code>required uint32 file_size = 4;</code>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 file_size = 4;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }
    /**
     * <code>required uint32 file_size = 4;</code>
     */
    private void setFileSize(int value) {
      bitField0_ |= 0x00000008;
      fileSize_ = value;
    }
    /**
     * <code>required uint32 file_size = 4;</code>
     */
    private void clearFileSize() {
      bitField0_ = (bitField0_ & ~0x00000008);
      fileSize_ = 0;
    }

    public static final int TRANS_MODE_FIELD_NUMBER = 5;
    private int transMode_;
    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    public boolean hasTransMode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode() {
      com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType result = com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.forNumber(transMode_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.FILE_TYPE_ONLINE : result;
    }
    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    private void setTransMode(com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      transMode_ = value.getNumber();
    }
    /**
     * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
     */
    private void clearTransMode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      transMode_ = 1;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000020);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toUserId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getFileName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, fileSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, transMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toUserId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFileName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, fileSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, transMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMFileTransferReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMFileTransferReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMFileTransferReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMFileTransferReq)
        com.blt.talk.common.code.proto.IMServer.IMFileTransferReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMFileTransferReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:			0x0715
       * </pre>
       *
       * <code>required uint64 from_user_id = 1;</code>
       */
      public boolean hasFromUserId() {
        return instance.hasFromUserId();
      }
      /**
       * <pre>
       *cmd id:			0x0715
       * </pre>
       *
       * <code>required uint64 from_user_id = 1;</code>
       */
      public long getFromUserId() {
        return instance.getFromUserId();
      }
      /**
       * <pre>
       *cmd id:			0x0715
       * </pre>
       *
       * <code>required uint64 from_user_id = 1;</code>
       */
      public Builder setFromUserId(long value) {
        copyOnWrite();
        instance.setFromUserId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0715
       * </pre>
       *
       * <code>required uint64 from_user_id = 1;</code>
       */
      public Builder clearFromUserId() {
        copyOnWrite();
        instance.clearFromUserId();
        return this;
      }

      /**
       * <code>required uint64 to_user_id = 2;</code>
       */
      public boolean hasToUserId() {
        return instance.hasToUserId();
      }
      /**
       * <code>required uint64 to_user_id = 2;</code>
       */
      public long getToUserId() {
        return instance.getToUserId();
      }
      /**
       * <code>required uint64 to_user_id = 2;</code>
       */
      public Builder setToUserId(long value) {
        copyOnWrite();
        instance.setToUserId(value);
        return this;
      }
      /**
       * <code>required uint64 to_user_id = 2;</code>
       */
      public Builder clearToUserId() {
        copyOnWrite();
        instance.clearToUserId();
        return this;
      }

      /**
       * <code>required string file_name = 3;</code>
       */
      public boolean hasFileName() {
        return instance.hasFileName();
      }
      /**
       * <code>required string file_name = 3;</code>
       */
      public java.lang.String getFileName() {
        return instance.getFileName();
      }
      /**
       * <code>required string file_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        return instance.getFileNameBytes();
      }
      /**
       * <code>required string file_name = 3;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        copyOnWrite();
        instance.setFileName(value);
        return this;
      }
      /**
       * <code>required string file_name = 3;</code>
       */
      public Builder clearFileName() {
        copyOnWrite();
        instance.clearFileName();
        return this;
      }
      /**
       * <code>required string file_name = 3;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileNameBytes(value);
        return this;
      }

      /**
       * <code>required uint32 file_size = 4;</code>
       */
      public boolean hasFileSize() {
        return instance.hasFileSize();
      }
      /**
       * <code>required uint32 file_size = 4;</code>
       */
      public int getFileSize() {
        return instance.getFileSize();
      }
      /**
       * <code>required uint32 file_size = 4;</code>
       */
      public Builder setFileSize(int value) {
        copyOnWrite();
        instance.setFileSize(value);
        return this;
      }
      /**
       * <code>required uint32 file_size = 4;</code>
       */
      public Builder clearFileSize() {
        copyOnWrite();
        instance.clearFileSize();
        return this;
      }

      /**
       * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
       */
      public boolean hasTransMode() {
        return instance.hasTransMode();
      }
      /**
       * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode() {
        return instance.getTransMode();
      }
      /**
       * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
       */
      public Builder setTransMode(com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value) {
        copyOnWrite();
        instance.setTransMode(value);
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TransferFileType trans_mode = 5;</code>
       */
      public Builder clearTransMode() {
        copyOnWrite();
        instance.clearTransMode();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMFileTransferReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMFileTransferReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileSize()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTransMode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMFileTransferReq other = (com.blt.talk.common.code.proto.IMServer.IMFileTransferReq) arg1;
          fromUserId_ = visitor.visitLong(
              hasFromUserId(), fromUserId_,
              other.hasFromUserId(), other.fromUserId_);
          toUserId_ = visitor.visitLong(
              hasToUserId(), toUserId_,
              other.hasToUserId(), other.toUserId_);
          fileName_ = visitor.visitString(
              hasFileName(), fileName_,
              other.hasFileName(), other.fileName_);
          fileSize_ = visitor.visitInt(
              hasFileSize(), fileSize_,
              other.hasFileSize(), other.fileSize_);
          transMode_ = visitor.visitInt(hasTransMode(), transMode_,
              other.hasTransMode(), other.transMode_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromUserId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toUserId_ = input.readUInt64();
                  break;
                }
                case 26: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  fileName_ = s;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  fileSize_ = input.readUInt32();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value = com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    transMode_ = rawValue;
                  }
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000020;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMFileTransferReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMFileTransferReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMFileTransferReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMFileTransferReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMFileTransferReq> PARSER;

    public static com.google.protobuf.Parser<IMFileTransferReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMFileTransferRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMFileTransferRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    boolean hasResultCode();
    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    int getResultCode();

    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    long getFromUserId();

    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    boolean hasToUserId();
    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    long getToUserId();

    /**
     * <code>optional string file_name = 4;</code>
     */
    boolean hasFileName();
    /**
     * <code>optional string file_name = 4;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string file_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    boolean hasFileSize();
    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    int getFileSize();

    /**
     * <code>optional string task_id = 6;</code>
     */
    boolean hasTaskId();
    /**
     * <code>optional string task_id = 6;</code>
     */
    java.lang.String getTaskId();
    /**
     * <code>optional string task_id = 6;</code>
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();

    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    boolean hasTransMode();
    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.Server.IMFileTransferRsp}
   */
  public  static final class IMFileTransferRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMFileTransferRsp, IMFileTransferRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMFileTransferRsp)
      IMFileTransferRspOrBuilder {
    private IMFileTransferRsp() {
      fileName_ = "";
      taskId_ = "";
      transMode_ = 1;
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int RESULT_CODE_FIELD_NUMBER = 1;
    private int resultCode_;
    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    public int getResultCode() {
      return resultCode_;
    }
    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    private void setResultCode(int value) {
      bitField0_ |= 0x00000001;
      resultCode_ = value;
    }
    /**
     * <pre>
     *cmd id:			0x0716
     * </pre>
     *
     * <code>required uint32 result_code = 1;</code>
     */
    private void clearResultCode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      resultCode_ = 0;
    }

    public static final int FROM_USER_ID_FIELD_NUMBER = 2;
    private long fromUserId_;
    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    public long getFromUserId() {
      return fromUserId_;
    }
    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    private void setFromUserId(long value) {
      bitField0_ |= 0x00000002;
      fromUserId_ = value;
    }
    /**
     * <code>required uint64 from_user_id = 2;</code>
     */
    private void clearFromUserId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fromUserId_ = 0L;
    }

    public static final int TO_USER_ID_FIELD_NUMBER = 3;
    private long toUserId_;
    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    public boolean hasToUserId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    public long getToUserId() {
      return toUserId_;
    }
    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    private void setToUserId(long value) {
      bitField0_ |= 0x00000004;
      toUserId_ = value;
    }
    /**
     * <code>required uint64 to_user_id = 3;</code>
     */
    private void clearToUserId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      toUserId_ = 0L;
    }

    public static final int FILE_NAME_FIELD_NUMBER = 4;
    private java.lang.String fileName_;
    /**
     * <code>optional string file_name = 4;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string file_name = 4;</code>
     */
    public java.lang.String getFileName() {
      return fileName_;
    }
    /**
     * <code>optional string file_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fileName_);
    }
    /**
     * <code>optional string file_name = 4;</code>
     */
    private void setFileName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      fileName_ = value;
    }
    /**
     * <code>optional string file_name = 4;</code>
     */
    private void clearFileName() {
      bitField0_ = (bitField0_ & ~0x00000008);
      fileName_ = getDefaultInstance().getFileName();
    }
    /**
     * <code>optional string file_name = 4;</code>
     */
    private void setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      fileName_ = value.toStringUtf8();
    }

    public static final int FILE_SIZE_FIELD_NUMBER = 5;
    private int fileSize_;
    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }
    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    private void setFileSize(int value) {
      bitField0_ |= 0x00000010;
      fileSize_ = value;
    }
    /**
     * <code>optional uint32 file_size = 5;</code>
     */
    private void clearFileSize() {
      bitField0_ = (bitField0_ & ~0x00000010);
      fileSize_ = 0;
    }

    public static final int TASK_ID_FIELD_NUMBER = 6;
    private java.lang.String taskId_;
    /**
     * <code>optional string task_id = 6;</code>
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string task_id = 6;</code>
     */
    public java.lang.String getTaskId() {
      return taskId_;
    }
    /**
     * <code>optional string task_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(taskId_);
    }
    /**
     * <code>optional string task_id = 6;</code>
     */
    private void setTaskId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      taskId_ = value;
    }
    /**
     * <code>optional string task_id = 6;</code>
     */
    private void clearTaskId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      taskId_ = getDefaultInstance().getTaskId();
    }
    /**
     * <code>optional string task_id = 6;</code>
     */
    private void setTaskIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      taskId_ = value.toStringUtf8();
    }

    public static final int TRANS_MODE_FIELD_NUMBER = 7;
    private int transMode_;
    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    public boolean hasTransMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode() {
      com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType result = com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.forNumber(transMode_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.FILE_TYPE_ONLINE : result;
    }
    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    private void setTransMode(com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      transMode_ = value.getNumber();
    }
    /**
     * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
     */
    private void clearTransMode() {
      bitField0_ = (bitField0_ & ~0x00000040);
      transMode_ = 1;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000080);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, resultCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, fromUserId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, toUserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getFileName());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, fileSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getTaskId());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, transMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, resultCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, fromUserId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, toUserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getFileName());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, fileSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getTaskId());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, transMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMFileTransferRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMFileTransferRsp)
        com.blt.talk.common.code.proto.IMServer.IMFileTransferRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:			0x0716
       * </pre>
       *
       * <code>required uint32 result_code = 1;</code>
       */
      public boolean hasResultCode() {
        return instance.hasResultCode();
      }
      /**
       * <pre>
       *cmd id:			0x0716
       * </pre>
       *
       * <code>required uint32 result_code = 1;</code>
       */
      public int getResultCode() {
        return instance.getResultCode();
      }
      /**
       * <pre>
       *cmd id:			0x0716
       * </pre>
       *
       * <code>required uint32 result_code = 1;</code>
       */
      public Builder setResultCode(int value) {
        copyOnWrite();
        instance.setResultCode(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0716
       * </pre>
       *
       * <code>required uint32 result_code = 1;</code>
       */
      public Builder clearResultCode() {
        copyOnWrite();
        instance.clearResultCode();
        return this;
      }

      /**
       * <code>required uint64 from_user_id = 2;</code>
       */
      public boolean hasFromUserId() {
        return instance.hasFromUserId();
      }
      /**
       * <code>required uint64 from_user_id = 2;</code>
       */
      public long getFromUserId() {
        return instance.getFromUserId();
      }
      /**
       * <code>required uint64 from_user_id = 2;</code>
       */
      public Builder setFromUserId(long value) {
        copyOnWrite();
        instance.setFromUserId(value);
        return this;
      }
      /**
       * <code>required uint64 from_user_id = 2;</code>
       */
      public Builder clearFromUserId() {
        copyOnWrite();
        instance.clearFromUserId();
        return this;
      }

      /**
       * <code>required uint64 to_user_id = 3;</code>
       */
      public boolean hasToUserId() {
        return instance.hasToUserId();
      }
      /**
       * <code>required uint64 to_user_id = 3;</code>
       */
      public long getToUserId() {
        return instance.getToUserId();
      }
      /**
       * <code>required uint64 to_user_id = 3;</code>
       */
      public Builder setToUserId(long value) {
        copyOnWrite();
        instance.setToUserId(value);
        return this;
      }
      /**
       * <code>required uint64 to_user_id = 3;</code>
       */
      public Builder clearToUserId() {
        copyOnWrite();
        instance.clearToUserId();
        return this;
      }

      /**
       * <code>optional string file_name = 4;</code>
       */
      public boolean hasFileName() {
        return instance.hasFileName();
      }
      /**
       * <code>optional string file_name = 4;</code>
       */
      public java.lang.String getFileName() {
        return instance.getFileName();
      }
      /**
       * <code>optional string file_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        return instance.getFileNameBytes();
      }
      /**
       * <code>optional string file_name = 4;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        copyOnWrite();
        instance.setFileName(value);
        return this;
      }
      /**
       * <code>optional string file_name = 4;</code>
       */
      public Builder clearFileName() {
        copyOnWrite();
        instance.clearFileName();
        return this;
      }
      /**
       * <code>optional string file_name = 4;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileNameBytes(value);
        return this;
      }

      /**
       * <code>optional uint32 file_size = 5;</code>
       */
      public boolean hasFileSize() {
        return instance.hasFileSize();
      }
      /**
       * <code>optional uint32 file_size = 5;</code>
       */
      public int getFileSize() {
        return instance.getFileSize();
      }
      /**
       * <code>optional uint32 file_size = 5;</code>
       */
      public Builder setFileSize(int value) {
        copyOnWrite();
        instance.setFileSize(value);
        return this;
      }
      /**
       * <code>optional uint32 file_size = 5;</code>
       */
      public Builder clearFileSize() {
        copyOnWrite();
        instance.clearFileSize();
        return this;
      }

      /**
       * <code>optional string task_id = 6;</code>
       */
      public boolean hasTaskId() {
        return instance.hasTaskId();
      }
      /**
       * <code>optional string task_id = 6;</code>
       */
      public java.lang.String getTaskId() {
        return instance.getTaskId();
      }
      /**
       * <code>optional string task_id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        return instance.getTaskIdBytes();
      }
      /**
       * <code>optional string task_id = 6;</code>
       */
      public Builder setTaskId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTaskId(value);
        return this;
      }
      /**
       * <code>optional string task_id = 6;</code>
       */
      public Builder clearTaskId() {
        copyOnWrite();
        instance.clearTaskId();
        return this;
      }
      /**
       * <code>optional string task_id = 6;</code>
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTaskIdBytes(value);
        return this;
      }

      /**
       * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
       */
      public boolean hasTransMode() {
        return instance.hasTransMode();
      }
      /**
       * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType getTransMode() {
        return instance.getTransMode();
      }
      /**
       * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
       */
      public Builder setTransMode(com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value) {
        copyOnWrite();
        instance.setTransMode(value);
        return this;
      }
      /**
       * <code>optional .IM.BaseDefine.TransferFileType trans_mode = 7;</code>
       */
      public Builder clearTransMode() {
        copyOnWrite();
        instance.clearTransMode();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMFileTransferRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasResultCode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFromUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToUserId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp other = (com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp) arg1;
          resultCode_ = visitor.visitInt(
              hasResultCode(), resultCode_,
              other.hasResultCode(), other.resultCode_);
          fromUserId_ = visitor.visitLong(
              hasFromUserId(), fromUserId_,
              other.hasFromUserId(), other.fromUserId_);
          toUserId_ = visitor.visitLong(
              hasToUserId(), toUserId_,
              other.hasToUserId(), other.toUserId_);
          fileName_ = visitor.visitString(
              hasFileName(), fileName_,
              other.hasFileName(), other.fileName_);
          fileSize_ = visitor.visitInt(
              hasFileSize(), fileSize_,
              other.hasFileSize(), other.fileSize_);
          taskId_ = visitor.visitString(
              hasTaskId(), taskId_,
              other.hasTaskId(), other.taskId_);
          transMode_ = visitor.visitInt(hasTransMode(), transMode_,
              other.hasTransMode(), other.transMode_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  resultCode_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  fromUserId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  toUserId_ = input.readUInt64();
                  break;
                }
                case 34: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000008;
                  fileName_ = s;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  fileSize_ = input.readUInt32();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000020;
                  taskId_ = s;
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType value = com.blt.talk.common.code.proto.IMBaseDefine.TransferFileType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(7, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    transMode_ = rawValue;
                  }
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000080;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMFileTransferRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMFileTransferRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileTransferRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMFileTransferRsp> PARSER;

    public static com.google.protobuf.Parser<IMFileTransferRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMFileServerIPReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMFileServerIPReq)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   *cmd id:			0x0717
   * </pre>
   *
   * Protobuf type {@code IM.Server.IMFileServerIPReq}
   */
  public  static final class IMFileServerIPReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMFileServerIPReq, IMFileServerIPReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMFileServerIPReq)
      IMFileServerIPReqOrBuilder {
    private IMFileServerIPReq() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *cmd id:			0x0717
     * </pre>
     *
     * Protobuf type {@code IM.Server.IMFileServerIPReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMFileServerIPReq)
        com.blt.talk.common.code.proto.IMServer.IMFileServerIPReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:IM.Server.IMFileServerIPReq)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq other = (com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMFileServerIPReq)
    private static final com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMFileServerIPReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMFileServerIPReq> PARSER;

    public static com.google.protobuf.Parser<IMFileServerIPReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMFileServerIPRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Server.IMFileServerIPRsp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> 
        getIpAddrListList();
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.IpAddr getIpAddrList(int index);
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    int getIpAddrListCount();
  }
  /**
   * Protobuf type {@code IM.Server.IMFileServerIPRsp}
   */
  public  static final class IMFileServerIPRsp extends
      com.google.protobuf.GeneratedMessageLite<
          IMFileServerIPRsp, IMFileServerIPRsp.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.Server.IMFileServerIPRsp)
      IMFileServerIPRspOrBuilder {
    private IMFileServerIPRsp() {
      ipAddrList_ = emptyProtobufList();
    }
    public static final int IP_ADDR_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> ipAddrList_;
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> getIpAddrListList() {
      return ipAddrList_;
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    public java.util.List<? extends com.blt.talk.common.code.proto.IMBaseDefine.IpAddrOrBuilder> 
        getIpAddrListOrBuilderList() {
      return ipAddrList_;
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    public int getIpAddrListCount() {
      return ipAddrList_.size();
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.IpAddr getIpAddrList(int index) {
      return ipAddrList_.get(index);
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.IpAddrOrBuilder getIpAddrListOrBuilder(
        int index) {
      return ipAddrList_.get(index);
    }
    private void ensureIpAddrListIsMutable() {
      if (!ipAddrList_.isModifiable()) {
        ipAddrList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(ipAddrList_);
       }
    }

    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void setIpAddrList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpAddrListIsMutable();
      ipAddrList_.set(index, value);
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void setIpAddrList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
      ensureIpAddrListIsMutable();
      ipAddrList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void addIpAddrList(com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpAddrListIsMutable();
      ipAddrList_.add(value);
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void addIpAddrList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpAddrListIsMutable();
      ipAddrList_.add(index, value);
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void addIpAddrList(
        com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
      ensureIpAddrListIsMutable();
      ipAddrList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void addIpAddrList(
        int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
      ensureIpAddrListIsMutable();
      ipAddrList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void addAllIpAddrList(
        java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> values) {
      ensureIpAddrListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ipAddrList_);
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void clearIpAddrList() {
      ipAddrList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *cmd id:			0x0718
     * </pre>
     *
     * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
     */
    private void removeIpAddrList(int index) {
      ensureIpAddrListIsMutable();
      ipAddrList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ipAddrList_.size(); i++) {
        output.writeMessage(1, ipAddrList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ipAddrList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ipAddrList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.Server.IMFileServerIPRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.Server.IMFileServerIPRsp)
        com.blt.talk.common.code.proto.IMServer.IMFileServerIPRspOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public java.util.List<com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> getIpAddrListList() {
        return java.util.Collections.unmodifiableList(
            instance.getIpAddrListList());
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public int getIpAddrListCount() {
        return instance.getIpAddrListCount();
      }/**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.IpAddr getIpAddrList(int index) {
        return instance.getIpAddrList(index);
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder setIpAddrList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
        copyOnWrite();
        instance.setIpAddrList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder setIpAddrList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
        copyOnWrite();
        instance.setIpAddrList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder addIpAddrList(com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
        copyOnWrite();
        instance.addIpAddrList(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder addIpAddrList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr value) {
        copyOnWrite();
        instance.addIpAddrList(index, value);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder addIpAddrList(
          com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
        copyOnWrite();
        instance.addIpAddrList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder addIpAddrList(
          int index, com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.Builder builderForValue) {
        copyOnWrite();
        instance.addIpAddrList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder addAllIpAddrList(
          java.lang.Iterable<? extends com.blt.talk.common.code.proto.IMBaseDefine.IpAddr> values) {
        copyOnWrite();
        instance.addAllIpAddrList(values);
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder clearIpAddrList() {
        copyOnWrite();
        instance.clearIpAddrList();
        return this;
      }
      /**
       * <pre>
       *cmd id:			0x0718
       * </pre>
       *
       * <code>repeated .IM.BaseDefine.IpAddr ip_addr_list = 1;</code>
       */
      public Builder removeIpAddrList(int index) {
        copyOnWrite();
        instance.removeIpAddrList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Server.IMFileServerIPRsp)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getIpAddrListCount(); i++) {
            if (!getIpAddrList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          ipAddrList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp other = (com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp) arg1;
          ipAddrList_= visitor.visitList(ipAddrList_, other.ipAddrList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!ipAddrList_.isModifiable()) {
                    ipAddrList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(ipAddrList_);
                  }
                  ipAddrList_.add(
                      input.readMessage(com.blt.talk.common.code.proto.IMBaseDefine.IpAddr.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.Server.IMFileServerIPRsp)
    private static final com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMFileServerIPRsp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMServer.IMFileServerIPRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMFileServerIPRsp> PARSER;

    public static com.google.protobuf.Parser<IMFileServerIPRsp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
