// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.WebRTC.proto

package com.blt.talk.common.code.proto;

public final class IMWebRTC {
  private IMWebRTC() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface IMAVCallInitiateReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallInitiateReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    long getFromId();

    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    long getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    boolean hasCallerClientType();
    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCallerClientType();

    /**
     * <code>required bytes body = 5;</code>
     */
    boolean hasBody();
    /**
     * <code>required bytes body = 5;</code>
     */
    com.google.protobuf.ByteString getBody();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallInitiateReq}
   */
  public  static final class IMAVCallInitiateReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallInitiateReq, IMAVCallInitiateReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallInitiateReq)
      IMAVCallInitiateReqOrBuilder {
    private IMAVCallInitiateReq() {
      callerClientType_ = 1;
      body_ = com.google.protobuf.ByteString.EMPTY;
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private long fromId_;
    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public long getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void setFromId(long value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id:		0x0901
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0L;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private long toId_;
    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public long getToId() {
      return toId_;
    }
    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void setToId(long value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <pre>
     * 被呼叫一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0L;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int CALLER_CLIENT_TYPE_FIELD_NUMBER = 4;
    private int callerClientType_;
    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    public boolean hasCallerClientType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCallerClientType() {
      com.blt.talk.common.code.proto.IMBaseDefine.ClientType result = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(callerClientType_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.ClientType.CLIENT_TYPE_WINDOWS : result;
    }
    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    private void setCallerClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      callerClientType_ = value.getNumber();
    }
    /**
     * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
     */
    private void clearCallerClientType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      callerClientType_ = 1;
    }

    public static final int BODY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString body_;
    /**
     * <code>required bytes body = 5;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes body = 5;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }
    /**
     * <code>required bytes body = 5;</code>
     */
    private void setBody(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      body_ = value;
    }
    /**
     * <code>required bytes body = 5;</code>
     */
    private void clearBody() {
      bitField0_ = (bitField0_ & ~0x00000010);
      body_ = getDefaultInstance().getBody();
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000020);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, callerClientType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, body_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, callerClientType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, body_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallInitiateReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallInitiateReq)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:		0x0901
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id:		0x0901
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public long getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id:		0x0901
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder setFromId(long value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:		0x0901
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <pre>
       * 被呼叫一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <pre>
       * 被呼叫一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public long getToId() {
        return instance.getToId();
      }
      /**
       * <pre>
       * 被呼叫一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder setToId(long value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <pre>
       * 被呼叫一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
       */
      public boolean hasCallerClientType() {
        return instance.hasCallerClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCallerClientType() {
        return instance.getCallerClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
       */
      public Builder setCallerClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
        copyOnWrite();
        instance.setCallerClientType(value);
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.ClientType caller_client_type = 4;</code>
       */
      public Builder clearCallerClientType() {
        copyOnWrite();
        instance.clearCallerClientType();
        return this;
      }

      /**
       * <code>required bytes body = 5;</code>
       */
      public boolean hasBody() {
        return instance.hasBody();
      }
      /**
       * <code>required bytes body = 5;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return instance.getBody();
      }
      /**
       * <code>required bytes body = 5;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBody(value);
        return this;
      }
      /**
       * <code>required bytes body = 5;</code>
       */
      public Builder clearBody() {
        copyOnWrite();
        instance.clearBody();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallInitiateReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallerClientType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasBody()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq) arg1;
          fromId_ = visitor.visitLong(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitLong(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          callerClientType_ = visitor.visitInt(hasCallerClientType(), callerClientType_,
              other.hasCallerClientType(), other.callerClientType_);
          body_ = visitor.visitByteString(
              hasBody(), body_,
              other.hasBody(), other.body_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.ClientType value = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    callerClientType_ = rawValue;
                  }
                  break;
                }
                case 42: {
                  bitField0_ |= 0x00000010;
                  body_ = input.readBytes();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000020;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallInitiateReq)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallInitiateReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallInitiateReq> PARSER;

    public static com.google.protobuf.Parser<IMAVCallInitiateReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMAVCallInitiateResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallInitiateRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    long getFromId();

    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    long getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    boolean hasCalledClientType();
    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCalledClientType();

    /**
     * <code>required uint32 code = 5;</code>
     */
    boolean hasCode();
    /**
     * <code>required uint32 code = 5;</code>
     */
    int getCode();

    /**
     * <code>required string reason = 6;</code>
     */
    boolean hasReason();
    /**
     * <code>required string reason = 6;</code>
     */
    java.lang.String getReason();
    /**
     * <code>required string reason = 6;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    /**
     * <code>required bytes body = 7;</code>
     */
    boolean hasBody();
    /**
     * <code>required bytes body = 7;</code>
     */
    com.google.protobuf.ByteString getBody();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallInitiateRes}
   */
  public  static final class IMAVCallInitiateRes extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallInitiateRes, IMAVCallInitiateRes.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallInitiateRes)
      IMAVCallInitiateResOrBuilder {
    private IMAVCallInitiateRes() {
      calledClientType_ = 1;
      reason_ = "";
      body_ = com.google.protobuf.ByteString.EMPTY;
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private long fromId_;
    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public long getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void setFromId(long value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id:		0x0902
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0L;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private long toId_;
    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public long getToId() {
      return toId_;
    }
    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void setToId(long value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <pre>
     * 被呼叫的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0L;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int CALLED_CLIENT_TYPE_FIELD_NUMBER = 4;
    private int calledClientType_;
    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    public boolean hasCalledClientType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCalledClientType() {
      com.blt.talk.common.code.proto.IMBaseDefine.ClientType result = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(calledClientType_);
      return result == null ? com.blt.talk.common.code.proto.IMBaseDefine.ClientType.CLIENT_TYPE_WINDOWS : result;
    }
    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    private void setCalledClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      calledClientType_ = value.getNumber();
    }
    /**
     * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
     */
    private void clearCalledClientType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      calledClientType_ = 1;
    }

    public static final int CODE_FIELD_NUMBER = 5;
    private int code_;
    /**
     * <code>required uint32 code = 5;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 code = 5;</code>
     */
    public int getCode() {
      return code_;
    }
    /**
     * <code>required uint32 code = 5;</code>
     */
    private void setCode(int value) {
      bitField0_ |= 0x00000010;
      code_ = value;
    }
    /**
     * <code>required uint32 code = 5;</code>
     */
    private void clearCode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      code_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 6;
    private java.lang.String reason_;
    /**
     * <code>required string reason = 6;</code>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string reason = 6;</code>
     */
    public java.lang.String getReason() {
      return reason_;
    }
    /**
     * <code>required string reason = 6;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(reason_);
    }
    /**
     * <code>required string reason = 6;</code>
     */
    private void setReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      reason_ = value;
    }
    /**
     * <code>required string reason = 6;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000020);
      reason_ = getDefaultInstance().getReason();
    }
    /**
     * <code>required string reason = 6;</code>
     */
    private void setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      reason_ = value.toStringUtf8();
    }

    public static final int BODY_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString body_;
    /**
     * <code>required bytes body = 7;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bytes body = 7;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }
    /**
     * <code>required bytes body = 7;</code>
     */
    private void setBody(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      body_ = value;
    }
    /**
     * <code>required bytes body = 7;</code>
     */
    private void clearBody() {
      bitField0_ = (bitField0_ & ~0x00000040);
      body_ = getDefaultInstance().getBody();
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000080);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, calledClientType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, code_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getReason());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, body_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, calledClientType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, code_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getReason());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, body_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallInitiateRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallInitiateRes)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateResOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id:		0x0902
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id:		0x0902
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public long getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id:		0x0902
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder setFromId(long value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id:		0x0902
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <pre>
       * 被呼叫的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <pre>
       * 被呼叫的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public long getToId() {
        return instance.getToId();
      }
      /**
       * <pre>
       * 被呼叫的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder setToId(long value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <pre>
       * 被呼叫的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
       */
      public boolean hasCalledClientType() {
        return instance.hasCalledClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
       */
      public com.blt.talk.common.code.proto.IMBaseDefine.ClientType getCalledClientType() {
        return instance.getCalledClientType();
      }
      /**
       * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
       */
      public Builder setCalledClientType(com.blt.talk.common.code.proto.IMBaseDefine.ClientType value) {
        copyOnWrite();
        instance.setCalledClientType(value);
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.ClientType called_client_type = 4;</code>
       */
      public Builder clearCalledClientType() {
        copyOnWrite();
        instance.clearCalledClientType();
        return this;
      }

      /**
       * <code>required uint32 code = 5;</code>
       */
      public boolean hasCode() {
        return instance.hasCode();
      }
      /**
       * <code>required uint32 code = 5;</code>
       */
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <code>required uint32 code = 5;</code>
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <code>required uint32 code = 5;</code>
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <code>required string reason = 6;</code>
       */
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <code>required string reason = 6;</code>
       */
      public java.lang.String getReason() {
        return instance.getReason();
      }
      /**
       * <code>required string reason = 6;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return instance.getReasonBytes();
      }
      /**
       * <code>required string reason = 6;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <code>required string reason = 6;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }
      /**
       * <code>required string reason = 6;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReasonBytes(value);
        return this;
      }

      /**
       * <code>required bytes body = 7;</code>
       */
      public boolean hasBody() {
        return instance.hasBody();
      }
      /**
       * <code>required bytes body = 7;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return instance.getBody();
      }
      /**
       * <code>required bytes body = 7;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBody(value);
        return this;
      }
      /**
       * <code>required bytes body = 7;</code>
       */
      public Builder clearBody() {
        copyOnWrite();
        instance.clearBody();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallInitiateRes)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCalledClientType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasBody()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes) arg1;
          fromId_ = visitor.visitLong(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitLong(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          calledClientType_ = visitor.visitInt(hasCalledClientType(), calledClientType_,
              other.hasCalledClientType(), other.calledClientType_);
          code_ = visitor.visitInt(
              hasCode(), code_,
              other.hasCode(), other.code_);
          reason_ = visitor.visitString(
              hasReason(), reason_,
              other.hasReason(), other.reason_);
          body_ = visitor.visitByteString(
              hasBody(), body_,
              other.hasBody(), other.body_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  com.blt.talk.common.code.proto.IMBaseDefine.ClientType value = com.blt.talk.common.code.proto.IMBaseDefine.ClientType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    calledClientType_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  code_ = input.readUInt32();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000020;
                  reason_ = s;
                  break;
                }
                case 58: {
                  bitField0_ |= 0x00000040;
                  body_ = input.readBytes();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000080;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallInitiateRes)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallInitiateRes();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallInitiateRes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallInitiateRes> PARSER;

    public static com.google.protobuf.Parser<IMAVCallInitiateRes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMAVCallHungUpReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallHungUpReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    long getFromId();

    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    long getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallHungUpReq}
   */
  public  static final class IMAVCallHungUpReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallHungUpReq, IMAVCallHungUpReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallHungUpReq)
      IMAVCallHungUpReqOrBuilder {
    private IMAVCallHungUpReq() {
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private long fromId_;
    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public long getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void setFromId(long value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id: 		0x0903
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0L;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private long toId_;
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public long getToId() {
      return toId_;
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void setToId(long value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0L;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000008);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallHungUpReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallHungUpReq)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id: 		0x0903
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0903
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public long getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0903
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder setFromId(long value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id: 		0x0903
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public long getToId() {
        return instance.getToId();
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder setToId(long value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallHungUpReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq) arg1;
          fromId_ = visitor.visitLong(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitLong(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000008;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallHungUpReq)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallHungUpReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallHungUpReq> PARSER;

    public static com.google.protobuf.Parser<IMAVCallHungUpReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMAVCallHungUpResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallHungUpRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    long getFromId();

    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    long getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>required uint32 code = 4;</code>
     */
    boolean hasCode();
    /**
     * <code>required uint32 code = 4;</code>
     */
    int getCode();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallHungUpRes}
   */
  public  static final class IMAVCallHungUpRes extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallHungUpRes, IMAVCallHungUpRes.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallHungUpRes)
      IMAVCallHungUpResOrBuilder {
    private IMAVCallHungUpRes() {
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private long fromId_;
    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public long getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void setFromId(long value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id: 		0x0904
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0L;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private long toId_;
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    public long getToId() {
      return toId_;
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void setToId(long value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <pre>
     * 被挂断的一方
     * </pre>
     *
     * <code>required uint64 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0L;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int CODE_FIELD_NUMBER = 4;
    private int code_;
    /**
     * <code>required uint32 code = 4;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 code = 4;</code>
     */
    public int getCode() {
      return code_;
    }
    /**
     * <code>required uint32 code = 4;</code>
     */
    private void setCode(int value) {
      bitField0_ |= 0x00000008;
      code_ = value;
    }
    /**
     * <code>required uint32 code = 4;</code>
     */
    private void clearCode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      code_ = 0;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000010);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, code_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, code_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallHungUpRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallHungUpRes)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpResOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id: 		0x0904
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0904
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public long getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0904
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder setFromId(long value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id: 		0x0904
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public long getToId() {
        return instance.getToId();
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder setToId(long value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <pre>
       * 被挂断的一方
       * </pre>
       *
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>required uint32 code = 4;</code>
       */
      public boolean hasCode() {
        return instance.hasCode();
      }
      /**
       * <code>required uint32 code = 4;</code>
       */
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <code>required uint32 code = 4;</code>
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <code>required uint32 code = 4;</code>
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallHungUpRes)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes) arg1;
          fromId_ = visitor.visitLong(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitLong(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          code_ = visitor.visitInt(
              hasCode(), code_,
              other.hasCode(), other.code_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  code_ = input.readUInt32();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000010;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallHungUpRes)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallHungUpRes();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallHungUpRes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallHungUpRes> PARSER;

    public static com.google.protobuf.Parser<IMAVCallHungUpRes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMAVCallCancelReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallCancelReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    long getFromId();

    /**
     * <code>required uint64 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <code>required uint64 to_id = 2;</code>
     */
    long getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallCancelReq}
   */
  public  static final class IMAVCallCancelReq extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallCancelReq, IMAVCallCancelReq.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallCancelReq)
      IMAVCallCancelReqOrBuilder {
    private IMAVCallCancelReq() {
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private long fromId_;
    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    public long getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void setFromId(long value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id: 		0x0905
     * </pre>
     *
     * <code>required uint64 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0L;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private long toId_;
    /**
     * <code>required uint64 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 to_id = 2;</code>
     */
    public long getToId() {
      return toId_;
    }
    /**
     * <code>required uint64 to_id = 2;</code>
     */
    private void setToId(long value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <code>required uint64 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0L;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000008);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallCancelReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallCancelReq)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReqOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id: 		0x0905
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0905
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public long getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0905
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder setFromId(long value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id: 		0x0905
       * </pre>
       *
       * <code>required uint64 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <code>required uint64 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <code>required uint64 to_id = 2;</code>
       */
      public long getToId() {
        return instance.getToId();
      }
      /**
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder setToId(long value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <code>required uint64 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallCancelReq)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq) arg1;
          fromId_ = visitor.visitLong(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitLong(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000008;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallCancelReq)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallCancelReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallCancelReq> PARSER;

    public static com.google.protobuf.Parser<IMAVCallCancelReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IMAVCallCancelResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.WebRTC.IMAVCallCancelRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    boolean hasFromId();
    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    int getFromId();

    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    boolean hasToId();
    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    int getToId();

    /**
     * <code>required uint64 call_id = 3;</code>
     */
    boolean hasCallId();
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    long getCallId();

    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    boolean hasAttachData();
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    com.google.protobuf.ByteString getAttachData();
  }
  /**
   * Protobuf type {@code IM.WebRTC.IMAVCallCancelRes}
   */
  public  static final class IMAVCallCancelRes extends
      com.google.protobuf.GeneratedMessageLite<
          IMAVCallCancelRes, IMAVCallCancelRes.Builder> implements
      // @@protoc_insertion_point(message_implements:IM.WebRTC.IMAVCallCancelRes)
      IMAVCallCancelResOrBuilder {
    private IMAVCallCancelRes() {
      attachData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FROM_ID_FIELD_NUMBER = 1;
    private int fromId_;
    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    public boolean hasFromId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    public int getFromId() {
      return fromId_;
    }
    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    private void setFromId(int value) {
      bitField0_ |= 0x00000001;
      fromId_ = value;
    }
    /**
     * <pre>
     *cmd id: 		0x0906
     * </pre>
     *
     * <code>required uint32 from_id = 1;</code>
     */
    private void clearFromId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fromId_ = 0;
    }

    public static final int TO_ID_FIELD_NUMBER = 2;
    private int toId_;
    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    public boolean hasToId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    public int getToId() {
      return toId_;
    }
    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    private void setToId(int value) {
      bitField0_ |= 0x00000002;
      toId_ = value;
    }
    /**
     * <pre>
     * 对方
     * </pre>
     *
     * <code>required uint32 to_id = 2;</code>
     */
    private void clearToId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      toId_ = 0;
    }

    public static final int CALL_ID_FIELD_NUMBER = 3;
    private long callId_;
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public boolean hasCallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    public long getCallId() {
      return callId_;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void setCallId(long value) {
      bitField0_ |= 0x00000004;
      callId_ = value;
    }
    /**
     * <code>required uint64 call_id = 3;</code>
     */
    private void clearCallId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      callId_ = 0L;
    }

    public static final int ATTACH_DATA_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString attachData_;
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public boolean hasAttachData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    public com.google.protobuf.ByteString getAttachData() {
      return attachData_;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void setAttachData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      attachData_ = value;
    }
    /**
     * <code>optional bytes attach_data = 20;</code>
     */
    private void clearAttachData() {
      bitField0_ = (bitField0_ & ~0x00000008);
      attachData_ = getDefaultInstance().getAttachData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(20, attachData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, callId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, attachData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code IM.WebRTC.IMAVCallCancelRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes, Builder> implements
        // @@protoc_insertion_point(builder_implements:IM.WebRTC.IMAVCallCancelRes)
        com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelResOrBuilder {
      // Construct using com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cmd id: 		0x0906
       * </pre>
       *
       * <code>required uint32 from_id = 1;</code>
       */
      public boolean hasFromId() {
        return instance.hasFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0906
       * </pre>
       *
       * <code>required uint32 from_id = 1;</code>
       */
      public int getFromId() {
        return instance.getFromId();
      }
      /**
       * <pre>
       *cmd id: 		0x0906
       * </pre>
       *
       * <code>required uint32 from_id = 1;</code>
       */
      public Builder setFromId(int value) {
        copyOnWrite();
        instance.setFromId(value);
        return this;
      }
      /**
       * <pre>
       *cmd id: 		0x0906
       * </pre>
       *
       * <code>required uint32 from_id = 1;</code>
       */
      public Builder clearFromId() {
        copyOnWrite();
        instance.clearFromId();
        return this;
      }

      /**
       * <pre>
       * 对方
       * </pre>
       *
       * <code>required uint32 to_id = 2;</code>
       */
      public boolean hasToId() {
        return instance.hasToId();
      }
      /**
       * <pre>
       * 对方
       * </pre>
       *
       * <code>required uint32 to_id = 2;</code>
       */
      public int getToId() {
        return instance.getToId();
      }
      /**
       * <pre>
       * 对方
       * </pre>
       *
       * <code>required uint32 to_id = 2;</code>
       */
      public Builder setToId(int value) {
        copyOnWrite();
        instance.setToId(value);
        return this;
      }
      /**
       * <pre>
       * 对方
       * </pre>
       *
       * <code>required uint32 to_id = 2;</code>
       */
      public Builder clearToId() {
        copyOnWrite();
        instance.clearToId();
        return this;
      }

      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public boolean hasCallId() {
        return instance.hasCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public long getCallId() {
        return instance.getCallId();
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder setCallId(long value) {
        copyOnWrite();
        instance.setCallId(value);
        return this;
      }
      /**
       * <code>required uint64 call_id = 3;</code>
       */
      public Builder clearCallId() {
        copyOnWrite();
        instance.clearCallId();
        return this;
      }

      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public boolean hasAttachData() {
        return instance.hasAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public com.google.protobuf.ByteString getAttachData() {
        return instance.getAttachData();
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder setAttachData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAttachData(value);
        return this;
      }
      /**
       * <code>optional bytes attach_data = 20;</code>
       */
      public Builder clearAttachData() {
        copyOnWrite();
        instance.clearAttachData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.WebRTC.IMAVCallCancelRes)
    }
    private byte memoizedIsInitialized = -1;
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFromId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasToId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCallId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes other = (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes) arg1;
          fromId_ = visitor.visitInt(
              hasFromId(), fromId_,
              other.hasFromId(), other.fromId_);
          toId_ = visitor.visitInt(
              hasToId(), toId_,
              other.hasToId(), other.toId_);
          callId_ = visitor.visitLong(
              hasCallId(), callId_,
              other.hasCallId(), other.callId_);
          attachData_ = visitor.visitByteString(
              hasAttachData(), attachData_,
              other.hasAttachData(), other.attachData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  fromId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  toId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  callId_ = input.readUInt64();
                  break;
                }
                case 162: {
                  bitField0_ |= 0x00000008;
                  attachData_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IM.WebRTC.IMAVCallCancelRes)
    private static final com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMAVCallCancelRes();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.blt.talk.common.code.proto.IMWebRTC.IMAVCallCancelRes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IMAVCallCancelRes> PARSER;

    public static com.google.protobuf.Parser<IMAVCallCancelRes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
